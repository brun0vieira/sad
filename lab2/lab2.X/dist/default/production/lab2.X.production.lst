

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 25 20:28:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190                           
   191                           	psect	stringtext
   192  0800                     __pstringtext:
   193  0800                     stringtab:
   194  0800                     __stringtab:
   195                           
   196                           ;	String table - string pointers are 2 bytes each
   197  0800  1BFF               	btfsc	btemp+1,7
   198  0801  280A               	ljmp	stringcode
   199  0802  1383               	bcf	3,7
   200  0803  187F               	btfsc	btemp+1,0
   201  0804  1783               	bsf	3,7
   202  0805  0800               	movf	0,w
   203  0806  0A84               	incf	4,f
   204  0807  1903               	skipnz
   205  0808  0AFF               	incf	btemp+1,f
   206  0809  0008               	return
   207  080A                     stringcode:
   208  080A  087F               	movf	btemp+1,w
   209  080B  397F               	andlw	127
   210  080C  008A               	movwf	10
   211  080D  0804               	movf	4,w
   212  080E  0A84               	incf	4,f
   213  080F  1903               	skipnz
   214  0810  0AFF               	incf	btemp+1,f
   215  0811  0082               	movwf	2
   216  0812                     __stringbase:
   217  0812                     __end_of__stringtab:
   218  0812                     _dpowers:
   219  0812  3401               	retlw	1
   220  0813  3400               	retlw	0
   221  0814  340A               	retlw	10
   222  0815  3400               	retlw	0
   223  0816  3464               	retlw	100
   224  0817  3400               	retlw	0
   225  0818  34E8               	retlw	232
   226  0819  3403               	retlw	3
   227  081A  3410               	retlw	16
   228  081B  3427               	retlw	39
   229  081C                     __end_of_dpowers:
   230  0007                     _PORTCbits	set	7
   231  0019                     _TXREG	set	25
   232  001A                     _RCREG	set	26
   233  001E                     _ADRESH	set	30
   234  001F                     _ADCON0bits	set	31
   235  001F                     _ADCON0	set	31
   236  0006                     _PORTBbits	set	6
   237  0008                     _PORTDbits	set	8
   238  0064                     _TXIF	set	100
   239  0065                     _RCIF	set	101
   240  00C4                     _CREN	set	196
   241  00C6                     _RX9	set	198
   242  00C7                     _SPEN	set	199
   243  0099                     _SPBRG	set	153
   244  009E                     _ADRESL	set	158
   245  009F                     _ADCON1bits	set	159
   246  009F                     _ADCON1	set	159
   247  0087                     _TRISCbits	set	135
   248  0085                     _TRISAbits	set	133
   249  0086                     _TRISBbits	set	134
   250  0088                     _TRISDbits	set	136
   251  04C5                     _TXEN	set	1221
   252  04C6                     _TX9	set	1222
   253  04C4                     _SYNC	set	1220
   254  04C2                     _BRGH	set	1218
   255  081C                     STR_3:
   256  081C  340A               	retlw	10
   257  081D  343C               	retlw	60	;'<'
   258  081E  3441               	retlw	65	;'A'
   259  081F  3476               	retlw	118	;'v'
   260  0820  3469               	retlw	105	;'i'
   261  0821  3473               	retlw	115	;'s'
   262  0822  346F               	retlw	111	;'o'
   263  0823  343E               	retlw	62	;'>'
   264  0824  340A               	retlw	10
   265  0825  3409               	retlw	9
   266  0826  343C               	retlw	60	;'<'
   267  0827  344D               	retlw	77	;'M'
   268  0828  3465               	retlw	101	;'e'
   269  0829  346E               	retlw	110	;'n'
   270  082A  3473               	retlw	115	;'s'
   271  082B  3461               	retlw	97	;'a'
   272  082C  3467               	retlw	103	;'g'
   273  082D  3465               	retlw	101	;'e'
   274  082E  346D               	retlw	109	;'m'
   275  082F  343E               	retlw	62	;'>'
   276  0830  3454               	retlw	84	;'T'
   277  0831  3465               	retlw	101	;'e'
   278  0832  346D               	retlw	109	;'m'
   279  0833  3470               	retlw	112	;'p'
   280  0834  3465               	retlw	101	;'e'
   281  0835  3472               	retlw	114	;'r'
   282  0836  3461               	retlw	97	;'a'
   283  0837  3474               	retlw	116	;'t'
   284  0838  3475               	retlw	117	;'u'
   285  0839  3472               	retlw	114	;'r'
   286  083A  3461               	retlw	97	;'a'
   287  083B  3420               	retlw	32	;' '
   288  083C  3461               	retlw	97	;'a'
   289  083D  3463               	retlw	99	;'c'
   290  083E  3469               	retlw	105	;'i'
   291  083F  346D               	retlw	109	;'m'
   292  0840  3461               	retlw	97	;'a'
   293  0841  3420               	retlw	32	;' '
   294  0842  3464               	retlw	100	;'d'
   295  0843  346F               	retlw	111	;'o'
   296  0844  3420               	retlw	32	;' '
   297  0845  3472               	retlw	114	;'r'
   298  0846  3465               	retlw	101	;'e'
   299  0847  3463               	retlw	99	;'c'
   300  0848  346F               	retlw	111	;'o'
   301  0849  346D               	retlw	109	;'m'
   302  084A  3465               	retlw	101	;'e'
   303  084B  346E               	retlw	110	;'n'
   304  084C  3464               	retlw	100	;'d'
   305  084D  3461               	retlw	97	;'a'
   306  084E  3464               	retlw	100	;'d'
   307  084F  346F               	retlw	111	;'o'
   308  0850  342E               	retlw	46	;'.'
   309  0851  3420               	retlw	32	;' '
   310  0852  344D               	retlw	77	;'M'
   311  0853  346F               	retlw	111	;'o'
   312  0854  3474               	retlw	116	;'t'
   313  0855  346F               	retlw	111	;'o'
   314  0856  3472               	retlw	114	;'r'
   315  0857  3420               	retlw	32	;' '
   316  0858  3461               	retlw	97	;'a'
   317  0859  3420               	retlw	32	;' '
   318  085A  3470               	retlw	112	;'p'
   319  085B  3461               	retlw	97	;'a'
   320  085C  3472               	retlw	114	;'r'
   321  085D  3461               	retlw	97	;'a'
   322  085E  3472               	retlw	114	;'r'
   323  085F  342E               	retlw	46	;'.'
   324  0860  343C               	retlw	60	;'<'
   325  0861  342F               	retlw	47	;'/'
   326  0862  344D               	retlw	77	;'M'
   327  0863  3465               	retlw	101	;'e'
   328  0864  346E               	retlw	110	;'n'
   329  0865  3473               	retlw	115	;'s'
   330  0866  3461               	retlw	97	;'a'
   331  0867  3467               	retlw	103	;'g'
   332  0868  3465               	retlw	101	;'e'
   333  0869  346D               	retlw	109	;'m'
   334  086A  343E               	retlw	62	;'>'
   335  086B  340A               	retlw	10
   336  086C  343C               	retlw	60	;'<'
   337  086D  342F               	retlw	47	;'/'
   338  086E  3441               	retlw	65	;'A'
   339  086F  3476               	retlw	118	;'v'
   340  0870  3469               	retlw	105	;'i'
   341  0871  3473               	retlw	115	;'s'
   342  0872  346F               	retlw	111	;'o'
   343  0873  343E               	retlw	62	;'>'
   344  0874  3400               	retlw	0
   345  0875                     STR_4:
   346  0875  340A               	retlw	10
   347  0876  343C               	retlw	60	;'<'
   348  0877  3441               	retlw	65	;'A'
   349  0878  3476               	retlw	118	;'v'
   350  0879  3469               	retlw	105	;'i'
   351  087A  3473               	retlw	115	;'s'
   352  087B  346F               	retlw	111	;'o'
   353  087C  343E               	retlw	62	;'>'
   354  087D  340A               	retlw	10
   355  087E  3409               	retlw	9
   356  087F  343C               	retlw	60	;'<'
   357  0880  344D               	retlw	77	;'M'
   358  0881  3465               	retlw	101	;'e'
   359  0882  346E               	retlw	110	;'n'
   360  0883  3473               	retlw	115	;'s'
   361  0884  3461               	retlw	97	;'a'
   362  0885  3467               	retlw	103	;'g'
   363  0886  3465               	retlw	101	;'e'
   364  0887  346D               	retlw	109	;'m'
   365  0888  343E               	retlw	62	;'>'
   366  0889  3453               	retlw	83	;'S'
   367  088A  3465               	retlw	101	;'e'
   368  088B  3467               	retlw	103	;'g'
   369  088C  3475               	retlw	117	;'u'
   370  088D  3469               	retlw	105	;'i'
   371  088E  3464               	retlw	100	;'d'
   372  088F  346F               	retlw	111	;'o'
   373  0890  3472               	retlw	114	;'r'
   374  0891  3420               	retlw	32	;' '
   375  0892  3473               	retlw	115	;'s'
   376  0893  346F               	retlw	111	;'o'
   377  0894  346C               	retlw	108	;'l'
   378  0895  3461               	retlw	97	;'a'
   379  0896  3472               	retlw	114	;'r'
   380  0897  3420               	retlw	32	;' '
   381  0898  3462               	retlw	98	;'b'
   382  0899  3465               	retlw	101	;'e'
   383  089A  346D               	retlw	109	;'m'
   384  089B  3420               	retlw	32	;' '
   385  089C  3470               	retlw	112	;'p'
   386  089D  346F               	retlw	111	;'o'
   387  089E  3473               	retlw	115	;'s'
   388  089F  3469               	retlw	105	;'i'
   389  08A0  3463               	retlw	99	;'c'
   390  08A1  3469               	retlw	105	;'i'
   391  08A2  346F               	retlw	111	;'o'
   392  08A3  346E               	retlw	110	;'n'
   393  08A4  3461               	retlw	97	;'a'
   394  08A5  3464               	retlw	100	;'d'
   395  08A6  346F               	retlw	111	;'o'
   396  08A7  342E               	retlw	46	;'.'
   397  08A8  3420               	retlw	32	;' '
   398  08A9  344D               	retlw	77	;'M'
   399  08AA  346F               	retlw	111	;'o'
   400  08AB  3474               	retlw	116	;'t'
   401  08AC  346F               	retlw	111	;'o'
   402  08AD  3472               	retlw	114	;'r'
   403  08AE  3420               	retlw	32	;' '
   404  08AF  3461               	retlw	97	;'a'
   405  08B0  3420               	retlw	32	;' '
   406  08B1  3470               	retlw	112	;'p'
   407  08B2  3461               	retlw	97	;'a'
   408  08B3  3472               	retlw	114	;'r'
   409  08B4  3461               	retlw	97	;'a'
   410  08B5  3472               	retlw	114	;'r'
   411  08B6  342E               	retlw	46	;'.'
   412  08B7  343C               	retlw	60	;'<'
   413  08B8  342F               	retlw	47	;'/'
   414  08B9  344D               	retlw	77	;'M'
   415  08BA  3465               	retlw	101	;'e'
   416  08BB  346E               	retlw	110	;'n'
   417  08BC  3473               	retlw	115	;'s'
   418  08BD  3461               	retlw	97	;'a'
   419  08BE  3467               	retlw	103	;'g'
   420  08BF  3465               	retlw	101	;'e'
   421  08C0  346D               	retlw	109	;'m'
   422  08C1  343E               	retlw	62	;'>'
   423  08C2  340A               	retlw	10
   424  08C3  343C               	retlw	60	;'<'
   425  08C4  342F               	retlw	47	;'/'
   426  08C5  3441               	retlw	65	;'A'
   427  08C6  3476               	retlw	118	;'v'
   428  08C7  3469               	retlw	105	;'i'
   429  08C8  3473               	retlw	115	;'s'
   430  08C9  346F               	retlw	111	;'o'
   431  08CA  343E               	retlw	62	;'>'
   432  08CB  3400               	retlw	0
   433  08CC                     STR_2:
   434  08CC  340A               	retlw	10
   435  08CD  343C               	retlw	60	;'<'
   436  08CE  3441               	retlw	65	;'A'
   437  08CF  3476               	retlw	118	;'v'
   438  08D0  3469               	retlw	105	;'i'
   439  08D1  3473               	retlw	115	;'s'
   440  08D2  346F               	retlw	111	;'o'
   441  08D3  343E               	retlw	62	;'>'
   442  08D4  340A               	retlw	10
   443  08D5  3409               	retlw	9
   444  08D6  343C               	retlw	60	;'<'
   445  08D7  344D               	retlw	77	;'M'
   446  08D8  3465               	retlw	101	;'e'
   447  08D9  346E               	retlw	110	;'n'
   448  08DA  3473               	retlw	115	;'s'
   449  08DB  3461               	retlw	97	;'a'
   450  08DC  3467               	retlw	103	;'g'
   451  08DD  3465               	retlw	101	;'e'
   452  08DE  346D               	retlw	109	;'m'
   453  08DF  343E               	retlw	62	;'>'
   454  08E0  344D               	retlw	77	;'M'
   455  08E1  346F               	retlw	111	;'o'
   456  08E2  3474               	retlw	116	;'t'
   457  08E3  346F               	retlw	111	;'o'
   458  08E4  3472               	retlw	114	;'r'
   459  08E5  3420               	retlw	32	;' '
   460  08E6  3461               	retlw	97	;'a'
   461  08E7  3420               	retlw	32	;' '
   462  08E8  3472               	retlw	114	;'r'
   463  08E9  346F               	retlw	111	;'o'
   464  08EA  3464               	retlw	100	;'d'
   465  08EB  3461               	retlw	97	;'a'
   466  08EC  3472               	retlw	114	;'r'
   467  08ED  3420               	retlw	32	;' '
   468  08EE  3470               	retlw	112	;'p'
   469  08EF  3461               	retlw	97	;'a'
   470  08F0  3472               	retlw	114	;'r'
   471  08F1  3461               	retlw	97	;'a'
   472  08F2  3420               	retlw	32	;' '
   473  08F3  3461               	retlw	97	;'a'
   474  08F4  3420               	retlw	32	;' '
   475  08F5  3465               	retlw	101	;'e'
   476  08F6  3473               	retlw	115	;'s'
   477  08F7  3471               	retlw	113	;'q'
   478  08F8  3475               	retlw	117	;'u'
   479  08F9  3465               	retlw	101	;'e'
   480  08FA  3472               	retlw	114	;'r'
   481  08FB  3464               	retlw	100	;'d'
   482  08FC  3461               	retlw	97	;'a'
   483  08FD  342E               	retlw	46	;'.'
   484  08FE  343C               	retlw	60	;'<'
   485  08FF  342F               	retlw	47	;'/'
   486  0900  344D               	retlw	77	;'M'
   487  0901  3465               	retlw	101	;'e'
   488  0902  346E               	retlw	110	;'n'
   489  0903  3473               	retlw	115	;'s'
   490  0904  3461               	retlw	97	;'a'
   491  0905  3467               	retlw	103	;'g'
   492  0906  3465               	retlw	101	;'e'
   493  0907  346D               	retlw	109	;'m'
   494  0908  343E               	retlw	62	;'>'
   495  0909  340A               	retlw	10
   496  090A  343C               	retlw	60	;'<'
   497  090B  342F               	retlw	47	;'/'
   498  090C  3441               	retlw	65	;'A'
   499  090D  3476               	retlw	118	;'v'
   500  090E  3469               	retlw	105	;'i'
   501  090F  3473               	retlw	115	;'s'
   502  0910  346F               	retlw	111	;'o'
   503  0911  343E               	retlw	62	;'>'
   504  0912  3400               	retlw	0
   505  0913                     STR_5:
   506  0913  340A               	retlw	10
   507  0914  343C               	retlw	60	;'<'
   508  0915  3441               	retlw	65	;'A'
   509  0916  3476               	retlw	118	;'v'
   510  0917  3469               	retlw	105	;'i'
   511  0918  3473               	retlw	115	;'s'
   512  0919  346F               	retlw	111	;'o'
   513  091A  343E               	retlw	62	;'>'
   514  091B  340A               	retlw	10
   515  091C  3409               	retlw	9
   516  091D  343C               	retlw	60	;'<'
   517  091E  344D               	retlw	77	;'M'
   518  091F  3465               	retlw	101	;'e'
   519  0920  346E               	retlw	110	;'n'
   520  0921  3473               	retlw	115	;'s'
   521  0922  3461               	retlw	97	;'a'
   522  0923  3467               	retlw	103	;'g'
   523  0924  3465               	retlw	101	;'e'
   524  0925  346D               	retlw	109	;'m'
   525  0926  343E               	retlw	62	;'>'
   526  0927  344D               	retlw	77	;'M'
   527  0928  346F               	retlw	111	;'o'
   528  0929  3474               	retlw	116	;'t'
   529  092A  346F               	retlw	111	;'o'
   530  092B  3472               	retlw	114	;'r'
   531  092C  3420               	retlw	32	;' '
   532  092D  3461               	retlw	97	;'a'
   533  092E  3420               	retlw	32	;' '
   534  092F  3472               	retlw	114	;'r'
   535  0930  346F               	retlw	111	;'o'
   536  0931  3464               	retlw	100	;'d'
   537  0932  3461               	retlw	97	;'a'
   538  0933  3472               	retlw	114	;'r'
   539  0934  3420               	retlw	32	;' '
   540  0935  3470               	retlw	112	;'p'
   541  0936  3461               	retlw	97	;'a'
   542  0937  3472               	retlw	114	;'r'
   543  0938  3461               	retlw	97	;'a'
   544  0939  3420               	retlw	32	;' '
   545  093A  3461               	retlw	97	;'a'
   546  093B  3420               	retlw	32	;' '
   547  093C  3464               	retlw	100	;'d'
   548  093D  3469               	retlw	105	;'i'
   549  093E  3472               	retlw	114	;'r'
   550  093F  3465               	retlw	101	;'e'
   551  0940  3469               	retlw	105	;'i'
   552  0941  3474               	retlw	116	;'t'
   553  0942  3461               	retlw	97	;'a'
   554  0943  342E               	retlw	46	;'.'
   555  0944  343C               	retlw	60	;'<'
   556  0945  342F               	retlw	47	;'/'
   557  0946  344D               	retlw	77	;'M'
   558  0947  3465               	retlw	101	;'e'
   559  0948  346E               	retlw	110	;'n'
   560  0949  3473               	retlw	115	;'s'
   561  094A  3461               	retlw	97	;'a'
   562  094B  3467               	retlw	103	;'g'
   563  094C  3465               	retlw	101	;'e'
   564  094D  346D               	retlw	109	;'m'
   565  094E  343E               	retlw	62	;'>'
   566  094F  340A               	retlw	10
   567  0950  343C               	retlw	60	;'<'
   568  0951  342F               	retlw	47	;'/'
   569  0952  3441               	retlw	65	;'A'
   570  0953  3476               	retlw	118	;'v'
   571  0954  3469               	retlw	105	;'i'
   572  0955  3473               	retlw	115	;'s'
   573  0956  346F               	retlw	111	;'o'
   574  0957  343E               	retlw	62	;'>'
   575  0958  3400               	retlw	0
   576  0959                     STR_1:
   577  0959  340A               	retlw	10
   578  095A  343C               	retlw	60	;'<'
   579  095B  3441               	retlw	65	;'A'
   580  095C  3476               	retlw	118	;'v'
   581  095D  3469               	retlw	105	;'i'
   582  095E  3473               	retlw	115	;'s'
   583  095F  346F               	retlw	111	;'o'
   584  0960  343E               	retlw	62	;'>'
   585  0961  340A               	retlw	10
   586  0962  3409               	retlw	9
   587  0963  343C               	retlw	60	;'<'
   588  0964  344D               	retlw	77	;'M'
   589  0965  3465               	retlw	101	;'e'
   590  0966  346E               	retlw	110	;'n'
   591  0967  3473               	retlw	115	;'s'
   592  0968  3461               	retlw	97	;'a'
   593  0969  3467               	retlw	103	;'g'
   594  096A  3465               	retlw	101	;'e'
   595  096B  346D               	retlw	109	;'m'
   596  096C  343E               	retlw	62	;'>'
   597  096D  344D               	retlw	77	;'M'
   598  096E  346F               	retlw	111	;'o'
   599  096F  3474               	retlw	116	;'t'
   600  0970  346F               	retlw	111	;'o'
   601  0971  3472               	retlw	114	;'r'
   602  0972  3420               	retlw	32	;' '
   603  0973  3461               	retlw	97	;'a'
   604  0974  3420               	retlw	32	;' '
   605  0975  3470               	retlw	112	;'p'
   606  0976  3461               	retlw	97	;'a'
   607  0977  3472               	retlw	114	;'r'
   608  0978  3461               	retlw	97	;'a'
   609  0979  3472               	retlw	114	;'r'
   610  097A  342E               	retlw	46	;'.'
   611  097B  343C               	retlw	60	;'<'
   612  097C  342F               	retlw	47	;'/'
   613  097D  344D               	retlw	77	;'M'
   614  097E  3465               	retlw	101	;'e'
   615  097F  346E               	retlw	110	;'n'
   616  0980  3473               	retlw	115	;'s'
   617  0981  3461               	retlw	97	;'a'
   618  0982  3467               	retlw	103	;'g'
   619  0983  3465               	retlw	101	;'e'
   620  0984  346D               	retlw	109	;'m'
   621  0985  343E               	retlw	62	;'>'
   622  0986  340A               	retlw	10
   623  0987  343C               	retlw	60	;'<'
   624  0988  342F               	retlw	47	;'/'
   625  0989  3441               	retlw	65	;'A'
   626  098A  3476               	retlw	118	;'v'
   627  098B  3469               	retlw	105	;'i'
   628  098C  3473               	retlw	115	;'s'
   629  098D  346F               	retlw	111	;'o'
   630  098E  343E               	retlw	62	;'>'
   631  098F  3400               	retlw	0
   632  0990                     STR_8:
   633  0990  340A               	retlw	10
   634  0991  343C               	retlw	60	;'<'
   635  0992  3441               	retlw	65	;'A'
   636  0993  3451               	retlw	81	;'Q'
   637  0994  3443               	retlw	67	;'C'
   638  0995  3431               	retlw	49	;'1'
   639  0996  343E               	retlw	62	;'>'
   640  0997  340A               	retlw	10
   641  0998  3409               	retlw	9
   642  0999  343C               	retlw	60	;'<'
   643  099A  346C               	retlw	108	;'l'
   644  099B  3464               	retlw	100	;'d'
   645  099C  3472               	retlw	114	;'r'
   646  099D  3431               	retlw	49	;'1'
   647  099E  343E               	retlw	62	;'>'
   648  099F  3420               	retlw	32	;' '
   649  09A0  3425               	retlw	37	;'%'
   650  09A1  3464               	retlw	100	;'d'
   651  09A2  3420               	retlw	32	;' '
   652  09A3  343C               	retlw	60	;'<'
   653  09A4  342F               	retlw	47	;'/'
   654  09A5  346C               	retlw	108	;'l'
   655  09A6  3464               	retlw	100	;'d'
   656  09A7  3472               	retlw	114	;'r'
   657  09A8  3431               	retlw	49	;'1'
   658  09A9  343E               	retlw	62	;'>'
   659  09AA  340A               	retlw	10
   660  09AB  3409               	retlw	9
   661  09AC  343C               	retlw	60	;'<'
   662  09AD  346C               	retlw	108	;'l'
   663  09AE  3464               	retlw	100	;'d'
   664  09AF  3472               	retlw	114	;'r'
   665  09B0  3432               	retlw	50	;'2'
   666  09B1  343E               	retlw	62	;'>'
   667  09B2  3420               	retlw	32	;' '
   668  09B3  3425               	retlw	37	;'%'
   669  09B4  3464               	retlw	100	;'d'
   670  09B5  3420               	retlw	32	;' '
   671  09B6  343C               	retlw	60	;'<'
   672  09B7  342F               	retlw	47	;'/'
   673  09B8  346C               	retlw	108	;'l'
   674  09B9  3464               	retlw	100	;'d'
   675  09BA  3472               	retlw	114	;'r'
   676  09BB  3432               	retlw	50	;'2'
   677  09BC  343E               	retlw	62	;'>'
   678  09BD  3400               	retlw	0
   679  09BE                     STR_9:
   680  09BE  340A               	retlw	10
   681  09BF  3409               	retlw	9
   682  09C0  343C               	retlw	60	;'<'
   683  09C1  3474               	retlw	116	;'t'
   684  09C2  3465               	retlw	101	;'e'
   685  09C3  346D               	retlw	109	;'m'
   686  09C4  3470               	retlw	112	;'p'
   687  09C5  3465               	retlw	101	;'e'
   688  09C6  3472               	retlw	114	;'r'
   689  09C7  3461               	retlw	97	;'a'
   690  09C8  3474               	retlw	116	;'t'
   691  09C9  3475               	retlw	117	;'u'
   692  09CA  3472               	retlw	114	;'r'
   693  09CB  3465               	retlw	101	;'e'
   694  09CC  343E               	retlw	62	;'>'
   695  09CD  3420               	retlw	32	;' '
   696  09CE  3425               	retlw	37	;'%'
   697  09CF  3464               	retlw	100	;'d'
   698  09D0  3420               	retlw	32	;' '
   699  09D1  343C               	retlw	60	;'<'
   700  09D2  342F               	retlw	47	;'/'
   701  09D3  3474               	retlw	116	;'t'
   702  09D4  3465               	retlw	101	;'e'
   703  09D5  346D               	retlw	109	;'m'
   704  09D6  3470               	retlw	112	;'p'
   705  09D7  3465               	retlw	101	;'e'
   706  09D8  3472               	retlw	114	;'r'
   707  09D9  3461               	retlw	97	;'a'
   708  09DA  3474               	retlw	116	;'t'
   709  09DB  3475               	retlw	117	;'u'
   710  09DC  3472               	retlw	114	;'r'
   711  09DD  3465               	retlw	101	;'e'
   712  09DE  343E               	retlw	62	;'>'
   713  09DF  3400               	retlw	0
   714  09E0                     STR_10:
   715  09E0  340A               	retlw	10
   716  09E1  3409               	retlw	9
   717  09E2  343C               	retlw	60	;'<'
   718  09E3  3473               	retlw	115	;'s'
   719  09E4  3474               	retlw	116	;'t'
   720  09E5  3461               	retlw	97	;'a'
   721  09E6  3474               	retlw	116	;'t'
   722  09E7  3465               	retlw	101	;'e'
   723  09E8  343E               	retlw	62	;'>'
   724  09E9  3420               	retlw	32	;' '
   725  09EA  3425               	retlw	37	;'%'
   726  09EB  3464               	retlw	100	;'d'
   727  09EC  3420               	retlw	32	;' '
   728  09ED  343C               	retlw	60	;'<'
   729  09EE  342F               	retlw	47	;'/'
   730  09EF  3473               	retlw	115	;'s'
   731  09F0  3474               	retlw	116	;'t'
   732  09F1  3461               	retlw	97	;'a'
   733  09F2  3474               	retlw	116	;'t'
   734  09F3  3465               	retlw	101	;'e'
   735  09F4  343E               	retlw	62	;'>'
   736  09F5  340A               	retlw	10
   737  09F6  343C               	retlw	60	;'<'
   738  09F7  342F               	retlw	47	;'/'
   739  09F8  3441               	retlw	65	;'A'
   740  09F9  3451               	retlw	81	;'Q'
   741  09FA  3443               	retlw	67	;'C'
   742  09FB  3431               	retlw	49	;'1'
   743  09FC  343E               	retlw	62	;'>'
   744  09FD  3400               	retlw	0
   745  081C                     
   746                           	psect	cinit
   747  07FC                     start_initialization:	
   748                           ; #config settings
   749                           
   750  07FC                     __initialization:
   751  07FC                     end_of_initialization:	
   752                           ;End of C runtime variable initialization code
   753                           
   754  07FC                     __end_of__initialization:
   755  07FC  0183               	clrf	3
   756  07FD  120A  118A  2C19   	ljmp	_main	;jump to C main() function
   757                           
   758                           	psect	cstackBANK1
   759  00A0                     __pcstackBANK1:
   760  00A0                     ?_solar_tracker:
   761  00A0                     solar_tracker@ldr_1:	
   762                           ; 2 bytes @ 0x0
   763                           
   764                           
   765                           ; 2 bytes @ 0x0
   766  00A0                     	ds	2
   767  00A2                     solar_tracker@ldr_2:
   768                           
   769                           ; 2 bytes @ 0x2
   770  00A2                     	ds	2
   771  00A4                     solar_tracker@temperature:
   772                           
   773                           ; 2 bytes @ 0x4
   774  00A4                     	ds	2
   775  00A6                     solar_tracker@state:
   776                           
   777                           ; 2 bytes @ 0x6
   778  00A6                     	ds	2
   779  00A8                     main@ldr_1:
   780                           
   781                           ; 2 bytes @ 0x8
   782  00A8                     	ds	2
   783  00AA                     main@ldr_2:
   784                           
   785                           ; 2 bytes @ 0xA
   786  00AA                     	ds	2
   787  00AC                     main@temperature:
   788                           
   789                           ; 2 bytes @ 0xC
   790  00AC                     	ds	2
   791  00AE                     main@state:
   792                           
   793                           ; 2 bytes @ 0xE
   794  00AE                     	ds	2
   795                           
   796                           	psect	cstackCOMMON
   797  0070                     __pcstackCOMMON:
   798  0070                     ?_change_heater_state:
   799  0070                     ??_change_heater_state:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_change_cooler_state:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ??_change_cooler_state:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_configPorts:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ??_configPorts:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_moveLeft:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ??_moveLeft:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_moveRight:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ??_moveRight:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_stopMotor:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ??_stopMotor:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_setNormal:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ??_setNormal:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_setStandby:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ??_setStandby:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_delay:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_adc_init:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ??_adc_init:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_usart_init:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ??_usart_init:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_usart_write_char:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ??_usart_write_char:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_check_temperature:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_changeMode:	
   869                           ; 2 bytes @ 0x0
   870                           
   871  0070                     ?_adc_read:	
   872                           ; 2 bytes @ 0x0
   873                           
   874  0070                     ?_main:	
   875                           ; 2 bytes @ 0x0
   876                           
   877  0070                     ?___lwdiv:	
   878                           ; 2 bytes @ 0x0
   879                           
   880  0070                     usart_write_char@c:	
   881                           ; 2 bytes @ 0x0
   882                           
   883  0070                     changeMode@state:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     delay@t:	
   887                           ; 2 bytes @ 0x0
   888                           
   889  0070                     adc_read@ch:	
   890                           ; 2 bytes @ 0x0
   891                           
   892  0070                     check_temperature@temperature:	
   893                           ; 2 bytes @ 0x0
   894                           
   895  0070                     ___lwdiv@divisor:	
   896                           ; 2 bytes @ 0x0
   897                           
   898                           
   899                           ; 2 bytes @ 0x0
   900  0070                     	ds	1
   901  0071                     ?_usart_write_string:
   902  0071                     usart_write_string@text:	
   903                           ; 1 bytes @ 0x1
   904                           
   905                           
   906                           ; 2 bytes @ 0x1
   907  0071                     	ds	1
   908  0072                     ??_check_temperature:
   909  0072                     ??_changeMode:	
   910                           ; 1 bytes @ 0x2
   911                           
   912  0072                     ??_delay:	
   913                           ; 1 bytes @ 0x2
   914                           
   915  0072                     ??_adc_read:	
   916                           ; 1 bytes @ 0x2
   917                           
   918  0072                     ___lwdiv@dividend:	
   919                           ; 1 bytes @ 0x2
   920                           
   921                           
   922                           ; 2 bytes @ 0x2
   923  0072                     	ds	1
   924  0073                     ??_usart_write_string:
   925  0073                     ?___awdiv:	
   926                           ; 1 bytes @ 0x3
   927                           
   928  0073                     delay@i:	
   929                           ; 2 bytes @ 0x3
   930                           
   931  0073                     ___awdiv@divisor:	
   932                           ; 2 bytes @ 0x3
   933                           
   934                           
   935                           ; 2 bytes @ 0x3
   936  0073                     	ds	1
   937  0074                     ??___lwdiv:
   938                           
   939                           ; 1 bytes @ 0x4
   940  0074                     	ds	1
   941  0075                     ?_debounce:
   942  0075                     debounce@port:	
   943                           ; 1 bytes @ 0x5
   944                           
   945  0075                     ___awdiv@dividend:	
   946                           ; 2 bytes @ 0x5
   947                           
   948  0075                     ___lwdiv@quotient:	
   949                           ; 2 bytes @ 0x5
   950                           
   951                           
   952                           ; 2 bytes @ 0x5
   953  0075                     	ds	1
   954  0076                     usart_write_string@i:
   955                           
   956                           ; 2 bytes @ 0x6
   957  0076                     	ds	1
   958  0077                     ??_debounce:
   959  0077                     ??___awdiv:	
   960                           ; 1 bytes @ 0x7
   961                           
   962  0077                     ___lwdiv@counter:	
   963                           ; 1 bytes @ 0x7
   964                           
   965                           
   966                           ; 1 bytes @ 0x7
   967  0077                     	ds	1
   968  0078                     ?___lwmod:
   969  0078                     ___awdiv@counter:	
   970                           ; 2 bytes @ 0x8
   971                           
   972  0078                     ___lwmod@divisor:	
   973                           ; 1 bytes @ 0x8
   974                           
   975                           
   976                           ; 2 bytes @ 0x8
   977  0078                     	ds	1
   978  0079                     ___awdiv@sign:
   979                           
   980                           ; 1 bytes @ 0x9
   981  0079                     	ds	1
   982  007A                     ___awdiv@quotient:
   983  007A                     ___lwmod@dividend:	
   984                           ; 2 bytes @ 0xA
   985                           
   986                           
   987                           ; 2 bytes @ 0xA
   988  007A                     	ds	2
   989  007C                     ??___lwmod:
   990                           
   991                           ; 1 bytes @ 0xC
   992  007C                     	ds	1
   993  007D                     ___lwmod@counter:
   994                           
   995                           ; 1 bytes @ 0xD
   996  007D                     	ds	1
   997  007E                     ??_print_aqc1_status:
   998  007E                     ??_main:	
   999                           ; 1 bytes @ 0xE
  1000                           
  1001                           
  1002                           	psect	cstackBANK0
  1003  0020                     __pcstackBANK0:	
  1004                           ; 1 bytes @ 0xE
  1005                           
  1006  0020                     ?_sprintf:
  1007  0020                     sprintf@f:	
  1008                           ; 2 bytes @ 0x0
  1009                           
  1010                           
  1011                           ; 2 bytes @ 0x0
  1012  0020                     	ds	6
  1013  0026                     ??_sprintf:
  1014                           
  1015                           ; 1 bytes @ 0x6
  1016  0026                     	ds	4
  1017  002A                     sprintf@ap:
  1018                           
  1019                           ; 1 bytes @ 0xA
  1020  002A                     	ds	1
  1021  002B                     sprintf@flag:
  1022                           
  1023                           ; 1 bytes @ 0xB
  1024  002B                     	ds	1
  1025  002C                     sprintf@prec:
  1026                           
  1027                           ; 1 bytes @ 0xC
  1028  002C                     	ds	1
  1029  002D                     sprintf@val:
  1030                           
  1031                           ; 2 bytes @ 0xD
  1032  002D                     	ds	2
  1033  002F                     sprintf@sp:
  1034                           
  1035                           ; 1 bytes @ 0xF
  1036  002F                     	ds	1
  1037  0030                     sprintf@c:
  1038                           
  1039                           ; 1 bytes @ 0x10
  1040  0030                     	ds	1
  1041  0031                     ?_print_aqc1_status:
  1042  0031                     print_aqc1_status@ldr_1:	
  1043                           ; 1 bytes @ 0x11
  1044                           
  1045                           
  1046                           ; 2 bytes @ 0x11
  1047  0031                     	ds	2
  1048  0033                     print_aqc1_status@ldr_2:
  1049                           
  1050                           ; 2 bytes @ 0x13
  1051  0033                     	ds	2
  1052  0035                     print_aqc1_status@temperature:
  1053                           
  1054                           ; 2 bytes @ 0x15
  1055  0035                     	ds	2
  1056  0037                     print_aqc1_status@state:
  1057                           
  1058                           ; 2 bytes @ 0x17
  1059  0037                     	ds	2
  1060  0039                     print_aqc1_status@str:
  1061                           
  1062                           ; 50 bytes @ 0x19
  1063  0039                     	ds	50
  1064  006B                     ??_solar_tracker:
  1065                           
  1066                           ; 1 bytes @ 0x4B
  1067  006B                     	ds	2
  1068  006D                     solar_tracker@max_temp_reached:
  1069                           
  1070                           ; 2 bytes @ 0x4D
  1071  006D                     	ds	2
  1072                           
  1073                           	psect	maintext
  1074  0419                     __pmaintext:	
  1075 ;;
  1076 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1077 ;;
  1078 ;; *************** function _main *****************
  1079 ;; Defined at:
  1080 ;;		line 379 in file "newmain.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  state           2   14[BANK1 ] int 
  1085 ;;  temperature     2   12[BANK1 ] int 
  1086 ;;  ldr_2           2   10[BANK1 ] int 
  1087 ;;  ldr_1           2    8[BANK1 ] int 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2  199[None  ] int 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : B00/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         0       0       8       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         0       0       8       0       0
  1101 ;;Total ram usage:        8 bytes
  1102 ;; Hardware stack levels required when called: 4
  1103 ;; This function calls:
  1104 ;;		___awdiv
  1105 ;;		_adc_init
  1106 ;;		_adc_read
  1107 ;;		_changeMode
  1108 ;;		_change_cooler_state
  1109 ;;		_change_heater_state
  1110 ;;		_configPorts
  1111 ;;		_debounce
  1112 ;;		_delay
  1113 ;;		_print_aqc1_status
  1114 ;;		_solar_tracker
  1115 ;;		_usart_init
  1116 ;; This function is called by:
  1117 ;;		Startup code after reset
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _main
  1123  0419                     _main:
  1124  0419                     l1662:	
  1125                           ;incstack = 0
  1126                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1127                           
  1128                           
  1129                           ;newmain.c: 381:     int state = 0;
  1130  0419  1683               	bsf	3,5	;RP0=1, select bank1
  1131  041A  1303               	bcf	3,6	;RP1=0, select bank1
  1132  041B  01AE               	clrf	main@state^(0+128)
  1133  041C  01AF               	clrf	(main@state+1)^(0+128)
  1134  041D  01AC               	clrf	main@temperature^(0+128)
  1135  041E  01AD               	clrf	(main@temperature+1)^(0+128)
  1136  041F  01AA               	clrf	main@ldr_2^(0+128)
  1137  0420  01AB               	clrf	(main@ldr_2+1)^(0+128)
  1138  0421                     l1664:
  1139                           
  1140                           ;newmain.c: 384:     configPorts();
  1141  0421  120A  118A  2134  120A  118A  	fcall	_configPorts
  1142  0426                     l1666:
  1143                           
  1144                           ;newmain.c: 385:     usart_init();
  1145  0426  120A  118A  2080  120A  118A  	fcall	_usart_init
  1146  042B                     l1668:
  1147                           
  1148                           ;newmain.c: 386:     adc_init();
  1149  042B  120A  118A  206C  120A  118A  	fcall	_adc_init
  1150  0430                     l1670:
  1151                           
  1152                           ;newmain.c: 389:     {;newmain.c: 390:         delay(20);
  1153  0430  3014               	movlw	20
  1154  0431  00F0               	movwf	delay@t
  1155  0432  3000               	movlw	0
  1156  0433  00F1               	movwf	delay@t+1
  1157  0434  120A  118A  20A7  120A  118A  	fcall	_delay
  1158  0439                     l1672:
  1159                           
  1160                           ;newmain.c: 391:         if(!PORTBbits.RB3)
  1161  0439  1283               	bcf	3,5	;RP0=0, select bank0
  1162  043A  1303               	bcf	3,6	;RP1=0, select bank0
  1163  043B  1986               	btfsc	6,3	;volatile
  1164  043C  2C3E               	goto	u1561
  1165  043D  2C3F               	goto	u1560
  1166  043E                     u1561:
  1167  043E  2C5A               	goto	l201
  1168  043F                     u1560:
  1169  043F                     l1674:
  1170                           
  1171                           ;newmain.c: 392:         {;newmain.c: 393:             debounce(3);
  1172  043F  3003               	movlw	3
  1173  0440  00F5               	movwf	debounce@port
  1174  0441  3000               	movlw	0
  1175  0442  00F6               	movwf	debounce@port+1
  1176  0443  120A  118A  221E  120A  118A  	fcall	_debounce
  1177                           
  1178                           ;newmain.c: 394:             state = changeMode(state);
  1179  0448  1683               	bsf	3,5	;RP0=1, select bank1
  1180  0449  1303               	bcf	3,6	;RP1=0, select bank1
  1181  044A  082F               	movf	(main@state+1)^(0+128),w
  1182  044B  00F1               	movwf	changeMode@state+1
  1183  044C  082E               	movf	main@state^(0+128),w
  1184  044D  00F0               	movwf	changeMode@state
  1185  044E  120A  118A  2114  120A  118A  	fcall	_changeMode
  1186  0453  0871               	movf	?_changeMode+1,w
  1187  0454  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0455  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0456  00AF               	movwf	(main@state+1)^(0+128)
  1190  0457  0870               	movf	?_changeMode,w
  1191  0458  00AE               	movwf	main@state^(0+128)
  1192                           
  1193                           ;newmain.c: 395:         }
  1194  0459  2C30               	goto	l1670
  1195  045A                     l201:	
  1196                           ;newmain.c: 396:         else if(!PORTBbits.RB4)
  1197                           
  1198  045A  1A06               	btfsc	6,4	;volatile
  1199  045B  2C5D               	goto	u1571
  1200  045C  2C5E               	goto	u1570
  1201  045D                     u1571:
  1202  045D  2C6D               	goto	l203
  1203  045E                     u1570:
  1204  045E                     l1676:
  1205                           
  1206                           ;newmain.c: 397:         {;newmain.c: 398:             debounce(4);
  1207  045E  3004               	movlw	4
  1208  045F  00F5               	movwf	debounce@port
  1209  0460  3000               	movlw	0
  1210  0461  00F6               	movwf	debounce@port+1
  1211  0462  120A  118A  221E  120A  118A  	fcall	_debounce
  1212  0467                     l1678:
  1213                           
  1214                           ;newmain.c: 399:             change_heater_state();
  1215  0467  120A  118A  20F7  120A  118A  	fcall	_change_heater_state
  1216                           
  1217                           ;newmain.c: 400:         }
  1218  046C  2C30               	goto	l1670
  1219  046D                     l203:	
  1220                           ;newmain.c: 401:         else if(!PORTBbits.RB5)
  1221                           
  1222  046D  1A86               	btfsc	6,5	;volatile
  1223  046E  2C70               	goto	u1581
  1224  046F  2C71               	goto	u1580
  1225  0470                     u1581:
  1226  0470  2C80               	goto	l1684
  1227  0471                     u1580:
  1228  0471                     l1680:
  1229                           
  1230                           ;newmain.c: 402:         {;newmain.c: 403:             debounce(5);
  1231  0471  3005               	movlw	5
  1232  0472  00F5               	movwf	debounce@port
  1233  0473  3000               	movlw	0
  1234  0474  00F6               	movwf	debounce@port+1
  1235  0475  120A  118A  221E  120A  118A  	fcall	_debounce
  1236  047A                     l1682:
  1237                           
  1238                           ;newmain.c: 404:             change_cooler_state();
  1239  047A  120A  118A  20DA  120A  118A  	fcall	_change_cooler_state
  1240                           
  1241                           ;newmain.c: 405:         }
  1242  047F  2C30               	goto	l1670
  1243  0480                     l1684:
  1244  0480  1683               	bsf	3,5	;RP0=1, select bank1
  1245  0481  1303               	bcf	3,6	;RP1=0, select bank1
  1246  0482  082E               	movf	main@state^(0+128),w
  1247  0483  042F               	iorwf	(main@state+1)^(0+128),w
  1248  0484  1903               	btfsc	3,2
  1249  0485  2C87               	goto	u1591
  1250  0486  2C88               	goto	u1590
  1251  0487                     u1591:
  1252  0487  2D12               	goto	l202
  1253  0488                     u1590:
  1254  0488                     l1686:
  1255                           
  1256                           ;newmain.c: 407:         {;newmain.c: 408:             ldr_1 = adc_read(0);
  1257  0488  3000               	movlw	0
  1258  0489  00F0               	movwf	adc_read@ch
  1259  048A  00F1               	movwf	adc_read@ch+1
  1260  048B  120A  118A  20BF  120A  118A  	fcall	_adc_read
  1261  0490  0871               	movf	?_adc_read+1,w
  1262  0491  1683               	bsf	3,5	;RP0=1, select bank1
  1263  0492  1303               	bcf	3,6	;RP1=0, select bank1
  1264  0493  00A9               	movwf	(main@ldr_1+1)^(0+128)
  1265  0494  0870               	movf	?_adc_read,w
  1266  0495  00A8               	movwf	main@ldr_1^(0+128)
  1267                           
  1268                           ;newmain.c: 409:             ldr_2 = adc_read(1);
  1269  0496  3001               	movlw	1
  1270  0497  00F0               	movwf	adc_read@ch
  1271  0498  3000               	movlw	0
  1272  0499  00F1               	movwf	adc_read@ch+1
  1273  049A  120A  118A  20BF  120A  118A  	fcall	_adc_read
  1274  049F  0871               	movf	?_adc_read+1,w
  1275  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  1276  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  1277  04A2  00AB               	movwf	(main@ldr_2+1)^(0+128)
  1278  04A3  0870               	movf	?_adc_read,w
  1279  04A4  00AA               	movwf	main@ldr_2^(0+128)
  1280                           
  1281                           ;newmain.c: 410:             temperature = adc_read(2)/2;
  1282  04A5  3002               	movlw	2
  1283  04A6  00F3               	movwf	___awdiv@divisor
  1284  04A7  3000               	movlw	0
  1285  04A8  00F4               	movwf	___awdiv@divisor+1
  1286  04A9  3002               	movlw	2
  1287  04AA  00F0               	movwf	adc_read@ch
  1288  04AB  3000               	movlw	0
  1289  04AC  00F1               	movwf	adc_read@ch+1
  1290  04AD  120A  118A  20BF  120A  118A  	fcall	_adc_read
  1291  04B2  0871               	movf	?_adc_read+1,w
  1292  04B3  00F6               	movwf	___awdiv@dividend+1
  1293  04B4  0870               	movf	?_adc_read,w
  1294  04B5  00F5               	movwf	___awdiv@dividend
  1295  04B6  120A  118A  22B6  120A  118A  	fcall	___awdiv
  1296  04BB  0874               	movf	?___awdiv+1,w
  1297  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  1298  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  1299  04BE  00AD               	movwf	(main@temperature+1)^(0+128)
  1300  04BF  0873               	movf	?___awdiv,w
  1301  04C0  00AC               	movwf	main@temperature^(0+128)
  1302  04C1                     l1688:
  1303                           
  1304                           ;newmain.c: 411:             print_aqc1_status(ldr_1,ldr_2,temperature,state);
  1305  04C1  0829               	movf	(main@ldr_1+1)^(0+128),w
  1306  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1307  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1308  04C4  00B2               	movwf	print_aqc1_status@ldr_1+1
  1309  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  1310  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  1311  04C7  0828               	movf	main@ldr_1^(0+128),w
  1312  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  1313  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  1314  04CA  00B1               	movwf	print_aqc1_status@ldr_1
  1315  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  1316  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  1317  04CD  082B               	movf	(main@ldr_2+1)^(0+128),w
  1318  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1319  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1320  04D0  00B4               	movwf	print_aqc1_status@ldr_2+1
  1321  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  1322  04D2  1303               	bcf	3,6	;RP1=0, select bank1
  1323  04D3  082A               	movf	main@ldr_2^(0+128),w
  1324  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1325  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1326  04D6  00B3               	movwf	print_aqc1_status@ldr_2
  1327  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  1328  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  1329  04D9  082D               	movf	(main@temperature+1)^(0+128),w
  1330  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1331  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1332  04DC  00B6               	movwf	print_aqc1_status@temperature+1
  1333  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1334  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1335  04DF  082C               	movf	main@temperature^(0+128),w
  1336  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1337  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1338  04E2  00B5               	movwf	print_aqc1_status@temperature
  1339  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  1340  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  1341  04E5  082F               	movf	(main@state+1)^(0+128),w
  1342  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1343  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1344  04E8  00B8               	movwf	print_aqc1_status@state+1
  1345  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  1346  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  1347  04EB  082E               	movf	main@state^(0+128),w
  1348  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1349  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1350  04EE  00B7               	movwf	print_aqc1_status@state
  1351  04EF  120A  118A  2266  120A  118A  	fcall	_print_aqc1_status
  1352  04F4                     l1690:
  1353                           
  1354                           ;newmain.c: 412:             state = solar_tracker(ldr_1,ldr_2,temperature,state);
  1355  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  1356  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  1357  04F6  0829               	movf	(main@ldr_1+1)^(0+128),w
  1358  04F7  00A1               	movwf	(solar_tracker@ldr_1+1)^(0+128)
  1359  04F8  0828               	movf	main@ldr_1^(0+128),w
  1360  04F9  00A0               	movwf	solar_tracker@ldr_1^(0+128)
  1361  04FA  082B               	movf	(main@ldr_2+1)^(0+128),w
  1362  04FB  00A3               	movwf	(solar_tracker@ldr_2+1)^(0+128)
  1363  04FC  082A               	movf	main@ldr_2^(0+128),w
  1364  04FD  00A2               	movwf	solar_tracker@ldr_2^(0+128)
  1365  04FE  082D               	movf	(main@temperature+1)^(0+128),w
  1366  04FF  00A5               	movwf	(solar_tracker@temperature+1)^(0+128)
  1367  0500  082C               	movf	main@temperature^(0+128),w
  1368  0501  00A4               	movwf	solar_tracker@temperature^(0+128)
  1369  0502  082F               	movf	(main@state+1)^(0+128),w
  1370  0503  00A7               	movwf	(solar_tracker@state+1)^(0+128)
  1371  0504  082E               	movf	main@state^(0+128),w
  1372  0505  00A6               	movwf	solar_tracker@state^(0+128)
  1373  0506  120A  118A  2516  120A  118A  	fcall	_solar_tracker
  1374  050B  1683               	bsf	3,5	;RP0=1, select bank1
  1375  050C  1303               	bcf	3,6	;RP1=0, select bank1
  1376  050D  0821               	movf	(?_solar_tracker+1)^(0+128),w
  1377  050E  00AF               	movwf	(main@state+1)^(0+128)
  1378  050F  0820               	movf	?_solar_tracker^(0+128),w
  1379  0510  00AE               	movwf	main@state^(0+128)
  1380  0511  2C30               	goto	l1670
  1381  0512                     l202:
  1382  0512  2C30               	goto	l1670
  1383  0513  120A  118A  2800   	ljmp	start
  1384  0516                     __end_of_main:
  1385                           
  1386                           	psect	text1
  1387  0080                     __ptext1:	
  1388 ;; *************** function _usart_init *****************
  1389 ;; Defined at:
  1390 ;;		line 165 in file "newmain.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _usart_init
  1419  0080                     _usart_init:
  1420  0080                     l1536:	
  1421                           ;incstack = 0
  1422                           ; Regs used in _usart_init: [wreg]
  1423                           
  1424                           
  1425                           ;newmain.c: 167:     BRGH = 1;
  1426  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1427  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1428  0082  1518               	bsf	24,2	;volatile
  1429  0083                     l1538:
  1430                           
  1431                           ;newmain.c: 168:     SPBRG = 25;
  1432  0083  3019               	movlw	25
  1433  0084  0099               	movwf	25	;volatile
  1434  0085                     l1540:
  1435                           
  1436                           ;newmain.c: 169:     SYNC = 0;
  1437  0085  1218               	bcf	24,4	;volatile
  1438  0086                     l1542:
  1439                           
  1440                           ;newmain.c: 170:     SPEN = 1;
  1441  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0088  1798               	bsf	24,7	;volatile
  1444  0089                     l1544:
  1445                           
  1446                           ;newmain.c: 171:     RX9 = 0;
  1447  0089  1318               	bcf	24,6	;volatile
  1448  008A                     l1546:
  1449                           
  1450                           ;newmain.c: 172:     TX9 = 0;
  1451  008A  1683               	bsf	3,5	;RP0=1, select bank1
  1452  008B  1303               	bcf	3,6	;RP1=0, select bank1
  1453  008C  1318               	bcf	24,6	;volatile
  1454  008D                     l1548:
  1455                           
  1456                           ;newmain.c: 173:     TXEN = 1;
  1457  008D  1698               	bsf	24,5	;volatile
  1458  008E                     l1550:
  1459                           
  1460                           ;newmain.c: 174:     CREN = 1;
  1461  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1462  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0090  1618               	bsf	24,4	;volatile
  1464  0091                     l101:
  1465  0091  0008               	return
  1466  0092                     __end_of_usart_init:
  1467                           
  1468                           	psect	text2
  1469  0516                     __ptext2:	
  1470 ;; *************** function _solar_tracker *****************
  1471 ;; Defined at:
  1472 ;;		line 243 in file "newmain.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  ldr_1           2    0[BANK1 ] int 
  1475 ;;  ldr_2           2    2[BANK1 ] int 
  1476 ;;  temperature     2    4[BANK1 ] int 
  1477 ;;  state           2    6[BANK1 ] int 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  max_temp_rea    2   77[BANK0 ] int 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  2    0[BANK1 ] int 
  1482 ;; Registers used:
  1483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       0       8       0       0
  1490 ;;      Locals:         0       2       0       0       0
  1491 ;;      Temps:          0       2       0       0       0
  1492 ;;      Totals:         0       4       8       0       0
  1493 ;;Total ram usage:       12 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 3
  1496 ;; This function calls:
  1497 ;;		___awdiv
  1498 ;;		_adc_read
  1499 ;;		_changeMode
  1500 ;;		_change_cooler_state
  1501 ;;		_change_heater_state
  1502 ;;		_check_temperature
  1503 ;;		_debounce
  1504 ;;		_delay
  1505 ;;		_moveLeft
  1506 ;;		_moveRight
  1507 ;;		_print_aqc1_status
  1508 ;;		_stopMotor
  1509 ;;		_usart_write_string
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _solar_tracker
  1517  0516                     _solar_tracker:
  1518  0516                     l1552:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _solar_tracker: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1521                           
  1522  0516                     l1554:
  1523                           
  1524                           ;newmain.c: 246:     max_temp_reached = check_temperature(temperature);
  1525  0516  1683               	bsf	3,5	;RP0=1, select bank1
  1526  0517  1303               	bcf	3,6	;RP1=0, select bank1
  1527  0518  0825               	movf	(solar_tracker@temperature+1)^(0+128),w
  1528  0519  00F1               	movwf	check_temperature@temperature+1
  1529  051A  0824               	movf	solar_tracker@temperature^(0+128),w
  1530  051B  00F0               	movwf	check_temperature@temperature
  1531  051C  120A  118A  2092  120A  118A  	fcall	_check_temperature
  1532  0521  0871               	movf	?_check_temperature+1,w
  1533  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0524  00EE               	movwf	solar_tracker@max_temp_reached+1
  1536  0525  0870               	movf	?_check_temperature,w
  1537  0526  00ED               	movwf	solar_tracker@max_temp_reached
  1538  0527                     l1556:
  1539                           
  1540                           ;newmain.c: 248:     if(ldr_1 < 20 && ldr_2 < 20)
  1541  0527  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0528  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0529  0821               	movf	(solar_tracker@ldr_1+1)^(0+128),w
  1544  052A  3A80               	xorlw	128
  1545  052B  00FF               	movwf	btemp+1
  1546  052C  3080               	movlw	128
  1547  052D  027F               	subwf	btemp+1,w
  1548  052E  1D03               	skipz
  1549  052F  2D32               	goto	u1375
  1550  0530  3014               	movlw	20
  1551  0531  0220               	subwf	solar_tracker@ldr_1^(0+128),w
  1552  0532                     u1375:
  1553  0532  1803               	skipnc
  1554  0533  2D35               	goto	u1371
  1555  0534  2D36               	goto	u1370
  1556  0535                     u1371:
  1557  0535  2D54               	goto	l1564
  1558  0536                     u1370:
  1559  0536                     l1558:
  1560  0536  1683               	bsf	3,5	;RP0=1, select bank1
  1561  0537  1303               	bcf	3,6	;RP1=0, select bank1
  1562  0538  0823               	movf	(solar_tracker@ldr_2+1)^(0+128),w
  1563  0539  3A80               	xorlw	128
  1564  053A  00FF               	movwf	btemp+1
  1565  053B  3080               	movlw	128
  1566  053C  027F               	subwf	btemp+1,w
  1567  053D  1D03               	skipz
  1568  053E  2D41               	goto	u1385
  1569  053F  3014               	movlw	20
  1570  0540  0222               	subwf	solar_tracker@ldr_2^(0+128),w
  1571  0541                     u1385:
  1572  0541  1803               	skipnc
  1573  0542  2D44               	goto	u1381
  1574  0543  2D45               	goto	u1380
  1575  0544                     u1381:
  1576  0544  2D54               	goto	l1564
  1577  0545                     u1380:
  1578  0545                     l1560:
  1579                           
  1580                           ;newmain.c: 249:     {;newmain.c: 250:         stopMotor();
  1581  0545  120A  118A  2054  120A  118A  	fcall	_stopMotor
  1582  054A                     l1562:
  1583                           
  1584                           ;newmain.c: 251:         usart_write_string("\n<Aviso>\n	<Mensagem>Motor a parar.</Mensa
      +                          gem>\n</Aviso>");
  1585  054A  3059               	movlw	low (STR_1| (0+32768))
  1586  054B  00F1               	movwf	usart_write_string@text
  1587  054C  3089               	movlw	high (STR_1| (0+32768))
  1588  054D  00F2               	movwf	usart_write_string@text+1
  1589  054E  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  1590                           
  1591                           ;newmain.c: 252:     }
  1592  0553  2FF5               	goto	l149
  1593  0554                     l1564:
  1594  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0556  086D               	movf	solar_tracker@max_temp_reached,w
  1597  0557  046E               	iorwf	solar_tracker@max_temp_reached+1,w
  1598  0558  1903               	btfsc	3,2
  1599  0559  2D5B               	goto	u1391
  1600  055A  2D5C               	goto	u1390
  1601  055B                     u1391:
  1602  055B  2D5D               	goto	l1568
  1603  055C                     u1390:
  1604  055C  2FF5               	goto	l149
  1605  055D                     l1568:
  1606  055D  1683               	bsf	3,5	;RP0=1, select bank1
  1607  055E  1303               	bcf	3,6	;RP1=0, select bank1
  1608  055F  0822               	movf	solar_tracker@ldr_2^(0+128),w
  1609  0560  0220               	subwf	solar_tracker@ldr_1^(0+128),w
  1610  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0563  00EB               	movwf	??_solar_tracker
  1613  0564  1683               	bsf	3,5	;RP0=1, select bank1
  1614  0565  1303               	bcf	3,6	;RP1=0, select bank1
  1615  0566  0823               	movf	(solar_tracker@ldr_2+1)^(0+128),w
  1616  0567  1C03               	skipc
  1617  0568  0A23               	incf	(solar_tracker@ldr_2+1)^(0+128),w
  1618  0569  0221               	subwf	(solar_tracker@ldr_1+1)^(0+128),w
  1619  056A  1283               	bcf	3,5	;RP0=0, select bank0
  1620  056B  1303               	bcf	3,6	;RP1=0, select bank0
  1621  056C  00EC               	movwf	??_solar_tracker+1
  1622  056D  086C               	movf	??_solar_tracker+1,w
  1623  056E  3A80               	xorlw	128
  1624  056F  00FF               	movwf	btemp+1
  1625  0570  3080               	movlw	128
  1626  0571  027F               	subwf	btemp+1,w
  1627  0572  1D03               	skipz
  1628  0573  2D76               	goto	u1405
  1629  0574  3065               	movlw	101
  1630  0575  026B               	subwf	??_solar_tracker,w
  1631  0576                     u1405:
  1632  0576  1C03               	skipc
  1633  0577  2D79               	goto	u1401
  1634  0578  2D7A               	goto	u1400
  1635  0579                     u1401:
  1636  0579  2EA2               	goto	l1612
  1637  057A                     u1400:
  1638  057A                     l1570:
  1639                           
  1640                           ;newmain.c: 258:     {;newmain.c: 259:         moveLeft();
  1641  057A  120A  118A  2059  120A  118A  	fcall	_moveLeft
  1642  057F                     l1572:
  1643                           
  1644                           ;newmain.c: 260:         usart_write_string("\n<Aviso>\n	<Mensagem>Motor a rodar para a 
      +                          esquerda.</Mensagem>\n</Aviso>");
  1645  057F  30CC               	movlw	low (STR_2| (0+32768))
  1646  0580  00F1               	movwf	usart_write_string@text
  1647  0581  3088               	movlw	high (STR_2| (0+32768))
  1648  0582  00F2               	movwf	usart_write_string@text+1
  1649  0583  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  1650  0588                     l1574:
  1651                           
  1652                           ;newmain.c: 261:         delay(2000);
  1653  0588  30D0               	movlw	208
  1654  0589  00F0               	movwf	delay@t
  1655  058A  3007               	movlw	7
  1656  058B  00F1               	movwf	delay@t+1
  1657  058C  120A  118A  20A7  120A  118A  	fcall	_delay
  1658                           
  1659                           ;newmain.c: 263:         while(ldr_1 - ldr_2 > 100 && state==1)
  1660  0591  2E6B               	goto	l1604
  1661  0592                     l1576:
  1662                           
  1663                           ;newmain.c: 264:         {;newmain.c: 265:             ldr_1 = adc_read(0);
  1664  0592  3000               	movlw	0
  1665  0593  00F0               	movwf	adc_read@ch
  1666  0594  00F1               	movwf	adc_read@ch+1
  1667  0595  120A  118A  20BF  120A  118A  	fcall	_adc_read
  1668  059A  0871               	movf	?_adc_read+1,w
  1669  059B  1683               	bsf	3,5	;RP0=1, select bank1
  1670  059C  1303               	bcf	3,6	;RP1=0, select bank1
  1671  059D  00A1               	movwf	(solar_tracker@ldr_1+1)^(0+128)
  1672  059E  0870               	movf	?_adc_read,w
  1673  059F  00A0               	movwf	solar_tracker@ldr_1^(0+128)
  1674                           
  1675                           ;newmain.c: 266:             ldr_2 = adc_read(1);
  1676  05A0  3001               	movlw	1
  1677  05A1  00F0               	movwf	adc_read@ch
  1678  05A2  3000               	movlw	0
  1679  05A3  00F1               	movwf	adc_read@ch+1
  1680  05A4  120A  118A  20BF  120A  118A  	fcall	_adc_read
  1681  05A9  0871               	movf	?_adc_read+1,w
  1682  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  1683  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  1684  05AC  00A3               	movwf	(solar_tracker@ldr_2+1)^(0+128)
  1685  05AD  0870               	movf	?_adc_read,w
  1686  05AE  00A2               	movwf	solar_tracker@ldr_2^(0+128)
  1687                           
  1688                           ;newmain.c: 267:             temperature = adc_read(2)/2;
  1689  05AF  3002               	movlw	2
  1690  05B0  00F3               	movwf	___awdiv@divisor
  1691  05B1  3000               	movlw	0
  1692  05B2  00F4               	movwf	___awdiv@divisor+1
  1693  05B3  3002               	movlw	2
  1694  05B4  00F0               	movwf	adc_read@ch
  1695  05B5  3000               	movlw	0
  1696  05B6  00F1               	movwf	adc_read@ch+1
  1697  05B7  120A  118A  20BF  120A  118A  	fcall	_adc_read
  1698  05BC  0871               	movf	?_adc_read+1,w
  1699  05BD  00F6               	movwf	___awdiv@dividend+1
  1700  05BE  0870               	movf	?_adc_read,w
  1701  05BF  00F5               	movwf	___awdiv@dividend
  1702  05C0  120A  118A  22B6  120A  118A  	fcall	___awdiv
  1703  05C5  0874               	movf	?___awdiv+1,w
  1704  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  1705  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  1706  05C8  00A5               	movwf	(solar_tracker@temperature+1)^(0+128)
  1707  05C9  0873               	movf	?___awdiv,w
  1708  05CA  00A4               	movwf	solar_tracker@temperature^(0+128)
  1709  05CB                     l1578:
  1710                           
  1711                           ;newmain.c: 268:             max_temp_reached = check_temperature(temperature);
  1712  05CB  0825               	movf	(solar_tracker@temperature+1)^(0+128),w
  1713  05CC  00F1               	movwf	check_temperature@temperature+1
  1714  05CD  0824               	movf	solar_tracker@temperature^(0+128),w
  1715  05CE  00F0               	movwf	check_temperature@temperature
  1716  05CF  120A  118A  2092  120A  118A  	fcall	_check_temperature
  1717  05D4  0871               	movf	?_check_temperature+1,w
  1718  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1719  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1720  05D7  00EE               	movwf	solar_tracker@max_temp_reached+1
  1721  05D8  0870               	movf	?_check_temperature,w
  1722  05D9  00ED               	movwf	solar_tracker@max_temp_reached
  1723  05DA                     l1580:
  1724                           
  1725                           ;newmain.c: 269:             print_aqc1_status(ldr_1,ldr_2,temperature,state);
  1726  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  1727  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  1728  05DC  0821               	movf	(solar_tracker@ldr_1+1)^(0+128),w
  1729  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1730  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1731  05DF  00B2               	movwf	print_aqc1_status@ldr_1+1
  1732  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  1733  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  1734  05E2  0820               	movf	solar_tracker@ldr_1^(0+128),w
  1735  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1736  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1737  05E5  00B1               	movwf	print_aqc1_status@ldr_1
  1738  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  1739  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  1740  05E8  0823               	movf	(solar_tracker@ldr_2+1)^(0+128),w
  1741  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1742  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1743  05EB  00B4               	movwf	print_aqc1_status@ldr_2+1
  1744  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1745  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1746  05EE  0822               	movf	solar_tracker@ldr_2^(0+128),w
  1747  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1748  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1749  05F1  00B3               	movwf	print_aqc1_status@ldr_2
  1750  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  1751  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  1752  05F4  0825               	movf	(solar_tracker@temperature+1)^(0+128),w
  1753  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1754  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1755  05F7  00B6               	movwf	print_aqc1_status@temperature+1
  1756  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  1757  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  1758  05FA  0824               	movf	solar_tracker@temperature^(0+128),w
  1759  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1760  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1761  05FD  00B5               	movwf	print_aqc1_status@temperature
  1762  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  1763  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  1764  0600  0827               	movf	(solar_tracker@state+1)^(0+128),w
  1765  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0603  00B8               	movwf	print_aqc1_status@state+1
  1768  0604  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0605  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0606  0826               	movf	solar_tracker@state^(0+128),w
  1771  0607  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0608  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0609  00B7               	movwf	print_aqc1_status@state
  1774  060A  120A  118A  2266  120A  118A  	fcall	_print_aqc1_status
  1775  060F                     l1582:
  1776                           
  1777                           ;newmain.c: 271:             if(!PORTBbits.RB3)
  1778  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0611  1986               	btfsc	6,3	;volatile
  1781  0612  2E14               	goto	u1411
  1782  0613  2E15               	goto	u1410
  1783  0614                     u1411:
  1784  0614  2E35               	goto	l155
  1785  0615                     u1410:
  1786  0615                     l1584:
  1787                           
  1788                           ;newmain.c: 272:             {;newmain.c: 273:                 debounce(3);
  1789  0615  3003               	movlw	3
  1790  0616  00F5               	movwf	debounce@port
  1791  0617  3000               	movlw	0
  1792  0618  00F6               	movwf	debounce@port+1
  1793  0619  120A  118A  221E  120A  118A  	fcall	_debounce
  1794                           
  1795                           ;newmain.c: 275:                 state = changeMode(state);
  1796  061E  1683               	bsf	3,5	;RP0=1, select bank1
  1797  061F  1303               	bcf	3,6	;RP1=0, select bank1
  1798  0620  0827               	movf	(solar_tracker@state+1)^(0+128),w
  1799  0621  00F1               	movwf	changeMode@state+1
  1800  0622  0826               	movf	solar_tracker@state^(0+128),w
  1801  0623  00F0               	movwf	changeMode@state
  1802  0624  120A  118A  2114  120A  118A  	fcall	_changeMode
  1803  0629  0871               	movf	?_changeMode+1,w
  1804  062A  1683               	bsf	3,5	;RP0=1, select bank1
  1805  062B  1303               	bcf	3,6	;RP1=0, select bank1
  1806  062C  00A7               	movwf	(solar_tracker@state+1)^(0+128)
  1807  062D  0870               	movf	?_changeMode,w
  1808  062E  00A6               	movwf	solar_tracker@state^(0+128)
  1809  062F                     l1586:
  1810                           
  1811                           ;newmain.c: 276:                 stopMotor();
  1812  062F  120A  118A  2054  120A  118A  	fcall	_stopMotor
  1813                           
  1814                           ;newmain.c: 277:                 break;
  1815  0634  2E90               	goto	l1608
  1816  0635                     l155:	
  1817                           ;newmain.c: 279:             else if(!PORTBbits.RB4)
  1818                           
  1819  0635  1A06               	btfsc	6,4	;volatile
  1820  0636  2E38               	goto	u1421
  1821  0637  2E39               	goto	u1420
  1822  0638                     u1421:
  1823  0638  2E48               	goto	l158
  1824  0639                     u1420:
  1825  0639                     l1590:
  1826                           
  1827                           ;newmain.c: 280:             {;newmain.c: 281:                 debounce(4);
  1828  0639  3004               	movlw	4
  1829  063A  00F5               	movwf	debounce@port
  1830  063B  3000               	movlw	0
  1831  063C  00F6               	movwf	debounce@port+1
  1832  063D  120A  118A  221E  120A  118A  	fcall	_debounce
  1833  0642                     l1592:
  1834                           
  1835                           ;newmain.c: 282:                 change_heater_state();
  1836  0642  120A  118A  20F7  120A  118A  	fcall	_change_heater_state
  1837                           
  1838                           ;newmain.c: 283:             }
  1839  0647  2E6B               	goto	l1604
  1840  0648                     l158:	
  1841                           ;newmain.c: 284:             else if(!PORTBbits.RB5)
  1842                           
  1843  0648  1A86               	btfsc	6,5	;volatile
  1844  0649  2E4B               	goto	u1431
  1845  064A  2E4C               	goto	u1430
  1846  064B                     u1431:
  1847  064B  2E5B               	goto	l1598
  1848  064C                     u1430:
  1849  064C                     l1594:
  1850                           
  1851                           ;newmain.c: 285:             {;newmain.c: 286:                 debounce(5);
  1852  064C  3005               	movlw	5
  1853  064D  00F5               	movwf	debounce@port
  1854  064E  3000               	movlw	0
  1855  064F  00F6               	movwf	debounce@port+1
  1856  0650  120A  118A  221E  120A  118A  	fcall	_debounce
  1857  0655                     l1596:
  1858                           
  1859                           ;newmain.c: 287:                 change_cooler_state();
  1860  0655  120A  118A  20DA  120A  118A  	fcall	_change_cooler_state
  1861                           
  1862                           ;newmain.c: 288:             }
  1863  065A  2E6B               	goto	l1604
  1864  065B                     l1598:
  1865  065B  086D               	movf	solar_tracker@max_temp_reached,w
  1866  065C  046E               	iorwf	solar_tracker@max_temp_reached+1,w
  1867  065D  1903               	btfsc	3,2
  1868  065E  2E60               	goto	u1441
  1869  065F  2E61               	goto	u1440
  1870  0660                     u1441:
  1871  0660  2E6B               	goto	l157
  1872  0661                     u1440:
  1873  0661                     l1600:
  1874                           
  1875                           ;newmain.c: 290:             {;newmain.c: 291:                 usart_write_string("\n<Av
      +                          iso>\n	<Mensagem>Temperatura acima do recomendado. Motor a parar.</Mensagem>\n</Aviso>")
      +                          ;
  1876  0661  301C               	movlw	low (STR_3| (0+32768))
  1877  0662  00F1               	movwf	usart_write_string@text
  1878  0663  3088               	movlw	high (STR_3| (0+32768))
  1879  0664  00F2               	movwf	usart_write_string@text+1
  1880  0665  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  1881  066A  2E2F               	goto	l1586
  1882  066B                     l157:
  1883  066B                     l1604:
  1884                           
  1885                           ;newmain.c: 263:         while(ldr_1 - ldr_2 > 100 && state==1)
  1886  066B  1683               	bsf	3,5	;RP0=1, select bank1
  1887  066C  1303               	bcf	3,6	;RP1=0, select bank1
  1888  066D  0822               	movf	solar_tracker@ldr_2^(0+128),w
  1889  066E  0220               	subwf	solar_tracker@ldr_1^(0+128),w
  1890  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1892  0671  00EB               	movwf	??_solar_tracker
  1893  0672  1683               	bsf	3,5	;RP0=1, select bank1
  1894  0673  1303               	bcf	3,6	;RP1=0, select bank1
  1895  0674  0823               	movf	(solar_tracker@ldr_2+1)^(0+128),w
  1896  0675  1C03               	skipc
  1897  0676  0A23               	incf	(solar_tracker@ldr_2+1)^(0+128),w
  1898  0677  0221               	subwf	(solar_tracker@ldr_1+1)^(0+128),w
  1899  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1901  067A  00EC               	movwf	??_solar_tracker+1
  1902  067B  086C               	movf	??_solar_tracker+1,w
  1903  067C  3A80               	xorlw	128
  1904  067D  00FF               	movwf	btemp+1
  1905  067E  3080               	movlw	128
  1906  067F  027F               	subwf	btemp+1,w
  1907  0680  1D03               	skipz
  1908  0681  2E84               	goto	u1455
  1909  0682  3065               	movlw	101
  1910  0683  026B               	subwf	??_solar_tracker,w
  1911  0684                     u1455:
  1912  0684  1C03               	skipc
  1913  0685  2E87               	goto	u1451
  1914  0686  2E88               	goto	u1450
  1915  0687                     u1451:
  1916  0687  2E90               	goto	l1608
  1917  0688                     u1450:
  1918  0688                     l1606:
  1919  0688  1683               	bsf	3,5	;RP0=1, select bank1
  1920  0689  1303               	bcf	3,6	;RP1=0, select bank1
  1921  068A  0326               	decf	solar_tracker@state^(0+128),w
  1922  068B  0427               	iorwf	(solar_tracker@state+1)^(0+128),w
  1923  068C  1903               	btfsc	3,2
  1924  068D  2E8F               	goto	u1461
  1925  068E  2E90               	goto	u1460
  1926  068F                     u1461:
  1927  068F  2D92               	goto	l1576
  1928  0690                     u1460:
  1929  0690                     l1608:
  1930                           
  1931                           ;newmain.c: 296:         if(!max_temp_reached)
  1932  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0692  086D               	movf	solar_tracker@max_temp_reached,w
  1935  0693  046E               	iorwf	solar_tracker@max_temp_reached+1,w
  1936  0694  1D03               	btfss	3,2
  1937  0695  2E97               	goto	u1471
  1938  0696  2E98               	goto	u1470
  1939  0697                     u1471:
  1940  0697  2FF5               	goto	l149
  1941  0698                     u1470:
  1942  0698                     l1610:
  1943                           
  1944                           ;newmain.c: 297:             usart_write_string("\n<Aviso>\n	<Mensagem>Seguidor solar be
      +                          m posicionado. Motor a parar.</Mensagem>\n</Aviso>");
  1945  0698  3075               	movlw	low (STR_4| (0+32768))
  1946  0699  00F1               	movwf	usart_write_string@text
  1947  069A  3088               	movlw	high (STR_4| (0+32768))
  1948  069B  00F2               	movwf	usart_write_string@text+1
  1949  069C  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  1950  06A1  2FF5               	goto	l149
  1951  06A2                     l1612:
  1952  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  1953  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  1954  06A4  0820               	movf	solar_tracker@ldr_1^(0+128),w
  1955  06A5  0222               	subwf	solar_tracker@ldr_2^(0+128),w
  1956  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1957  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1958  06A8  00EB               	movwf	??_solar_tracker
  1959  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  1960  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  1961  06AB  0821               	movf	(solar_tracker@ldr_1+1)^(0+128),w
  1962  06AC  1C03               	skipc
  1963  06AD  0A21               	incf	(solar_tracker@ldr_1+1)^(0+128),w
  1964  06AE  0223               	subwf	(solar_tracker@ldr_2+1)^(0+128),w
  1965  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1966  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1967  06B1  00EC               	movwf	??_solar_tracker+1
  1968  06B2  086C               	movf	??_solar_tracker+1,w
  1969  06B3  3A80               	xorlw	128
  1970  06B4  00FF               	movwf	btemp+1
  1971  06B5  3080               	movlw	128
  1972  06B6  027F               	subwf	btemp+1,w
  1973  06B7  1D03               	skipz
  1974  06B8  2EBB               	goto	u1485
  1975  06B9  3065               	movlw	101
  1976  06BA  026B               	subwf	??_solar_tracker,w
  1977  06BB                     u1485:
  1978  06BB  1C03               	skipc
  1979  06BC  2EBE               	goto	u1481
  1980  06BD  2EBF               	goto	u1480
  1981  06BE                     u1481:
  1982  06BE  2FE7               	goto	l1656
  1983  06BF                     u1480:
  1984  06BF                     l1614:
  1985                           
  1986                           ;newmain.c: 300:     {;newmain.c: 301:         moveRight();
  1987  06BF  120A  118A  205E  120A  118A  	fcall	_moveRight
  1988  06C4                     l1616:
  1989                           
  1990                           ;newmain.c: 302:         usart_write_string("\n<Aviso>\n	<Mensagem>Motor a rodar para a 
      +                          direita.</Mensagem>\n</Aviso>");
  1991  06C4  3013               	movlw	low (STR_5| (0+32768))
  1992  06C5  00F1               	movwf	usart_write_string@text
  1993  06C6  3089               	movlw	high (STR_5| (0+32768))
  1994  06C7  00F2               	movwf	usart_write_string@text+1
  1995  06C8  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  1996  06CD                     l1618:
  1997                           
  1998                           ;newmain.c: 303:         delay(2000);
  1999  06CD  30D0               	movlw	208
  2000  06CE  00F0               	movwf	delay@t
  2001  06CF  3007               	movlw	7
  2002  06D0  00F1               	movwf	delay@t+1
  2003  06D1  120A  118A  20A7  120A  118A  	fcall	_delay
  2004                           
  2005                           ;newmain.c: 305:         while(ldr_2 - ldr_1 > 100 && state==1)
  2006  06D6  2FB0               	goto	l1648
  2007  06D7                     l1620:
  2008                           
  2009                           ;newmain.c: 306:         {;newmain.c: 307:             ldr_1 = adc_read(0);
  2010  06D7  3000               	movlw	0
  2011  06D8  00F0               	movwf	adc_read@ch
  2012  06D9  00F1               	movwf	adc_read@ch+1
  2013  06DA  120A  118A  20BF  120A  118A  	fcall	_adc_read
  2014  06DF  0871               	movf	?_adc_read+1,w
  2015  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  2016  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  2017  06E2  00A1               	movwf	(solar_tracker@ldr_1+1)^(0+128)
  2018  06E3  0870               	movf	?_adc_read,w
  2019  06E4  00A0               	movwf	solar_tracker@ldr_1^(0+128)
  2020                           
  2021                           ;newmain.c: 308:             ldr_2 = adc_read(1);
  2022  06E5  3001               	movlw	1
  2023  06E6  00F0               	movwf	adc_read@ch
  2024  06E7  3000               	movlw	0
  2025  06E8  00F1               	movwf	adc_read@ch+1
  2026  06E9  120A  118A  20BF  120A  118A  	fcall	_adc_read
  2027  06EE  0871               	movf	?_adc_read+1,w
  2028  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  2029  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  2030  06F1  00A3               	movwf	(solar_tracker@ldr_2+1)^(0+128)
  2031  06F2  0870               	movf	?_adc_read,w
  2032  06F3  00A2               	movwf	solar_tracker@ldr_2^(0+128)
  2033                           
  2034                           ;newmain.c: 309:             temperature = adc_read(2)/2;
  2035  06F4  3002               	movlw	2
  2036  06F5  00F3               	movwf	___awdiv@divisor
  2037  06F6  3000               	movlw	0
  2038  06F7  00F4               	movwf	___awdiv@divisor+1
  2039  06F8  3002               	movlw	2
  2040  06F9  00F0               	movwf	adc_read@ch
  2041  06FA  3000               	movlw	0
  2042  06FB  00F1               	movwf	adc_read@ch+1
  2043  06FC  120A  118A  20BF  120A  118A  	fcall	_adc_read
  2044  0701  0871               	movf	?_adc_read+1,w
  2045  0702  00F6               	movwf	___awdiv@dividend+1
  2046  0703  0870               	movf	?_adc_read,w
  2047  0704  00F5               	movwf	___awdiv@dividend
  2048  0705  120A  118A  22B6  120A  118A  	fcall	___awdiv
  2049  070A  0874               	movf	?___awdiv+1,w
  2050  070B  1683               	bsf	3,5	;RP0=1, select bank1
  2051  070C  1303               	bcf	3,6	;RP1=0, select bank1
  2052  070D  00A5               	movwf	(solar_tracker@temperature+1)^(0+128)
  2053  070E  0873               	movf	?___awdiv,w
  2054  070F  00A4               	movwf	solar_tracker@temperature^(0+128)
  2055  0710                     l1622:
  2056                           
  2057                           ;newmain.c: 310:             max_temp_reached = check_temperature(temperature);
  2058  0710  0825               	movf	(solar_tracker@temperature+1)^(0+128),w
  2059  0711  00F1               	movwf	check_temperature@temperature+1
  2060  0712  0824               	movf	solar_tracker@temperature^(0+128),w
  2061  0713  00F0               	movwf	check_temperature@temperature
  2062  0714  120A  118A  2092  120A  118A  	fcall	_check_temperature
  2063  0719  0871               	movf	?_check_temperature+1,w
  2064  071A  1283               	bcf	3,5	;RP0=0, select bank0
  2065  071B  1303               	bcf	3,6	;RP1=0, select bank0
  2066  071C  00EE               	movwf	solar_tracker@max_temp_reached+1
  2067  071D  0870               	movf	?_check_temperature,w
  2068  071E  00ED               	movwf	solar_tracker@max_temp_reached
  2069  071F                     l1624:
  2070                           
  2071                           ;newmain.c: 311:             print_aqc1_status(ldr_1,ldr_2,temperature,state);
  2072  071F  1683               	bsf	3,5	;RP0=1, select bank1
  2073  0720  1303               	bcf	3,6	;RP1=0, select bank1
  2074  0721  0821               	movf	(solar_tracker@ldr_1+1)^(0+128),w
  2075  0722  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0723  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0724  00B2               	movwf	print_aqc1_status@ldr_1+1
  2078  0725  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0726  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0727  0820               	movf	solar_tracker@ldr_1^(0+128),w
  2081  0728  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0729  1303               	bcf	3,6	;RP1=0, select bank0
  2083  072A  00B1               	movwf	print_aqc1_status@ldr_1
  2084  072B  1683               	bsf	3,5	;RP0=1, select bank1
  2085  072C  1303               	bcf	3,6	;RP1=0, select bank1
  2086  072D  0823               	movf	(solar_tracker@ldr_2+1)^(0+128),w
  2087  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2088  072F  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0730  00B4               	movwf	print_aqc1_status@ldr_2+1
  2090  0731  1683               	bsf	3,5	;RP0=1, select bank1
  2091  0732  1303               	bcf	3,6	;RP1=0, select bank1
  2092  0733  0822               	movf	solar_tracker@ldr_2^(0+128),w
  2093  0734  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0735  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0736  00B3               	movwf	print_aqc1_status@ldr_2
  2096  0737  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0738  1303               	bcf	3,6	;RP1=0, select bank1
  2098  0739  0825               	movf	(solar_tracker@temperature+1)^(0+128),w
  2099  073A  1283               	bcf	3,5	;RP0=0, select bank0
  2100  073B  1303               	bcf	3,6	;RP1=0, select bank0
  2101  073C  00B6               	movwf	print_aqc1_status@temperature+1
  2102  073D  1683               	bsf	3,5	;RP0=1, select bank1
  2103  073E  1303               	bcf	3,6	;RP1=0, select bank1
  2104  073F  0824               	movf	solar_tracker@temperature^(0+128),w
  2105  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2106  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2107  0742  00B5               	movwf	print_aqc1_status@temperature
  2108  0743  1683               	bsf	3,5	;RP0=1, select bank1
  2109  0744  1303               	bcf	3,6	;RP1=0, select bank1
  2110  0745  0827               	movf	(solar_tracker@state+1)^(0+128),w
  2111  0746  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0747  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0748  00B8               	movwf	print_aqc1_status@state+1
  2114  0749  1683               	bsf	3,5	;RP0=1, select bank1
  2115  074A  1303               	bcf	3,6	;RP1=0, select bank1
  2116  074B  0826               	movf	solar_tracker@state^(0+128),w
  2117  074C  1283               	bcf	3,5	;RP0=0, select bank0
  2118  074D  1303               	bcf	3,6	;RP1=0, select bank0
  2119  074E  00B7               	movwf	print_aqc1_status@state
  2120  074F  120A  118A  2266  120A  118A  	fcall	_print_aqc1_status
  2121  0754                     l1626:
  2122                           
  2123                           ;newmain.c: 313:             if(!PORTBbits.RB3)
  2124  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0756  1986               	btfsc	6,3	;volatile
  2127  0757  2F59               	goto	u1491
  2128  0758  2F5A               	goto	u1490
  2129  0759                     u1491:
  2130  0759  2F7A               	goto	l170
  2131  075A                     u1490:
  2132  075A                     l1628:
  2133                           
  2134                           ;newmain.c: 314:             {;newmain.c: 315:                 debounce(3);
  2135  075A  3003               	movlw	3
  2136  075B  00F5               	movwf	debounce@port
  2137  075C  3000               	movlw	0
  2138  075D  00F6               	movwf	debounce@port+1
  2139  075E  120A  118A  221E  120A  118A  	fcall	_debounce
  2140                           
  2141                           ;newmain.c: 317:                 state = changeMode(state);
  2142  0763  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0764  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0765  0827               	movf	(solar_tracker@state+1)^(0+128),w
  2145  0766  00F1               	movwf	changeMode@state+1
  2146  0767  0826               	movf	solar_tracker@state^(0+128),w
  2147  0768  00F0               	movwf	changeMode@state
  2148  0769  120A  118A  2114  120A  118A  	fcall	_changeMode
  2149  076E  0871               	movf	?_changeMode+1,w
  2150  076F  1683               	bsf	3,5	;RP0=1, select bank1
  2151  0770  1303               	bcf	3,6	;RP1=0, select bank1
  2152  0771  00A7               	movwf	(solar_tracker@state+1)^(0+128)
  2153  0772  0870               	movf	?_changeMode,w
  2154  0773  00A6               	movwf	solar_tracker@state^(0+128)
  2155  0774                     l1630:
  2156                           
  2157                           ;newmain.c: 318:                 stopMotor();
  2158  0774  120A  118A  2054  120A  118A  	fcall	_stopMotor
  2159                           
  2160                           ;newmain.c: 319:                 break;
  2161  0779  2FD5               	goto	l1652
  2162  077A                     l170:	
  2163                           ;newmain.c: 321:             else if(!PORTBbits.RB4)
  2164                           
  2165  077A  1A06               	btfsc	6,4	;volatile
  2166  077B  2F7D               	goto	u1501
  2167  077C  2F7E               	goto	u1500
  2168  077D                     u1501:
  2169  077D  2F8D               	goto	l173
  2170  077E                     u1500:
  2171  077E                     l1634:
  2172                           
  2173                           ;newmain.c: 322:             {;newmain.c: 323:                 debounce(4);
  2174  077E  3004               	movlw	4
  2175  077F  00F5               	movwf	debounce@port
  2176  0780  3000               	movlw	0
  2177  0781  00F6               	movwf	debounce@port+1
  2178  0782  120A  118A  221E  120A  118A  	fcall	_debounce
  2179  0787                     l1636:
  2180                           
  2181                           ;newmain.c: 324:                 change_heater_state();
  2182  0787  120A  118A  20F7  120A  118A  	fcall	_change_heater_state
  2183                           
  2184                           ;newmain.c: 325:             }
  2185  078C  2FB0               	goto	l1648
  2186  078D                     l173:	
  2187                           ;newmain.c: 326:             else if(!PORTBbits.RB5)
  2188                           
  2189  078D  1A86               	btfsc	6,5	;volatile
  2190  078E  2F90               	goto	u1511
  2191  078F  2F91               	goto	u1510
  2192  0790                     u1511:
  2193  0790  2FA0               	goto	l1642
  2194  0791                     u1510:
  2195  0791                     l1638:
  2196                           
  2197                           ;newmain.c: 327:             {;newmain.c: 328:                 debounce(5);
  2198  0791  3005               	movlw	5
  2199  0792  00F5               	movwf	debounce@port
  2200  0793  3000               	movlw	0
  2201  0794  00F6               	movwf	debounce@port+1
  2202  0795  120A  118A  221E  120A  118A  	fcall	_debounce
  2203  079A                     l1640:
  2204                           
  2205                           ;newmain.c: 329:                 change_cooler_state();
  2206  079A  120A  118A  20DA  120A  118A  	fcall	_change_cooler_state
  2207                           
  2208                           ;newmain.c: 330:             }
  2209  079F  2FB0               	goto	l1648
  2210  07A0                     l1642:
  2211  07A0  086D               	movf	solar_tracker@max_temp_reached,w
  2212  07A1  046E               	iorwf	solar_tracker@max_temp_reached+1,w
  2213  07A2  1903               	btfsc	3,2
  2214  07A3  2FA5               	goto	u1521
  2215  07A4  2FA6               	goto	u1520
  2216  07A5                     u1521:
  2217  07A5  2FB0               	goto	l172
  2218  07A6                     u1520:
  2219  07A6                     l1644:
  2220                           
  2221                           ;newmain.c: 332:             {;newmain.c: 333:                 usart_write_string("\n<Av
      +                          iso>\n	<Mensagem>Temperatura acima do recomendado. Motor a parar.</Mensagem>\n</Aviso>")
      +                          ;
  2222  07A6  301C               	movlw	low (STR_3| (0+32768))
  2223  07A7  00F1               	movwf	usart_write_string@text
  2224  07A8  3088               	movlw	high (STR_3| (0+32768))
  2225  07A9  00F2               	movwf	usart_write_string@text+1
  2226  07AA  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  2227  07AF  2F74               	goto	l1630
  2228  07B0                     l172:
  2229  07B0                     l1648:
  2230                           
  2231                           ;newmain.c: 305:         while(ldr_2 - ldr_1 > 100 && state==1)
  2232  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  2233  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  2234  07B2  0820               	movf	solar_tracker@ldr_1^(0+128),w
  2235  07B3  0222               	subwf	solar_tracker@ldr_2^(0+128),w
  2236  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  2237  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  2238  07B6  00EB               	movwf	??_solar_tracker
  2239  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  2240  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  2241  07B9  0821               	movf	(solar_tracker@ldr_1+1)^(0+128),w
  2242  07BA  1C03               	skipc
  2243  07BB  0A21               	incf	(solar_tracker@ldr_1+1)^(0+128),w
  2244  07BC  0223               	subwf	(solar_tracker@ldr_2+1)^(0+128),w
  2245  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  2246  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  2247  07BF  00EC               	movwf	??_solar_tracker+1
  2248  07C0  086C               	movf	??_solar_tracker+1,w
  2249  07C1  3A80               	xorlw	128
  2250  07C2  00FF               	movwf	btemp+1
  2251  07C3  3080               	movlw	128
  2252  07C4  027F               	subwf	btemp+1,w
  2253  07C5  1D03               	skipz
  2254  07C6  2FC9               	goto	u1535
  2255  07C7  3065               	movlw	101
  2256  07C8  026B               	subwf	??_solar_tracker,w
  2257  07C9                     u1535:
  2258  07C9  1C03               	skipc
  2259  07CA  2FCC               	goto	u1531
  2260  07CB  2FCD               	goto	u1530
  2261  07CC                     u1531:
  2262  07CC  2FD5               	goto	l1652
  2263  07CD                     u1530:
  2264  07CD                     l1650:
  2265  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  2266  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  2267  07CF  0326               	decf	solar_tracker@state^(0+128),w
  2268  07D0  0427               	iorwf	(solar_tracker@state+1)^(0+128),w
  2269  07D1  1903               	btfsc	3,2
  2270  07D2  2FD4               	goto	u1541
  2271  07D3  2FD5               	goto	u1540
  2272  07D4                     u1541:
  2273  07D4  2ED7               	goto	l1620
  2274  07D5                     u1540:
  2275  07D5                     l1652:
  2276                           
  2277                           ;newmain.c: 338:         if(!max_temp_reached)
  2278  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  2279  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  2280  07D7  086D               	movf	solar_tracker@max_temp_reached,w
  2281  07D8  046E               	iorwf	solar_tracker@max_temp_reached+1,w
  2282  07D9  1D03               	btfss	3,2
  2283  07DA  2FDC               	goto	u1551
  2284  07DB  2FDD               	goto	u1550
  2285  07DC                     u1551:
  2286  07DC  2FF5               	goto	l149
  2287  07DD                     u1550:
  2288  07DD                     l1654:
  2289                           
  2290                           ;newmain.c: 339:             usart_write_string("\n<Aviso>\n	<Mensagem>Seguidor solar be
      +                          m posicionado. Motor a parar.</Mensagem>\n</Aviso>");
  2291  07DD  3075               	movlw	low (STR_4| (0+32768))
  2292  07DE  00F1               	movwf	usart_write_string@text
  2293  07DF  3088               	movlw	high (STR_4| (0+32768))
  2294  07E0  00F2               	movwf	usart_write_string@text+1
  2295  07E1  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  2296  07E6  2FF5               	goto	l149
  2297  07E7                     l1656:
  2298                           
  2299                           ;newmain.c: 342:     {;newmain.c: 343:         stopMotor();
  2300  07E7  120A  118A  2054  120A  118A  	fcall	_stopMotor
  2301  07EC                     l1658:
  2302                           
  2303                           ;newmain.c: 344:         delay(2000);
  2304  07EC  30D0               	movlw	208
  2305  07ED  00F0               	movwf	delay@t
  2306  07EE  3007               	movlw	7
  2307  07EF  00F1               	movwf	delay@t+1
  2308  07F0  120A  118A  20A7  120A  118A  	fcall	_delay
  2309  07F5                     l149:
  2310                           
  2311                           ;newmain.c: 346:     return state;
  2312  07F5  1683               	bsf	3,5	;RP0=1, select bank1
  2313  07F6  1303               	bcf	3,6	;RP1=0, select bank1
  2314  07F7  0827               	movf	(solar_tracker@state+1)^(0+128),w
  2315  07F8  00A1               	movwf	(?_solar_tracker+1)^(0+128)
  2316  07F9  0826               	movf	solar_tracker@state^(0+128),w
  2317  07FA  00A0               	movwf	?_solar_tracker^(0+128)
  2318  07FB                     l182:
  2319  07FB  0008               	return
  2320  07FC                     __end_of_solar_tracker:
  2321                           
  2322                           	psect	text3
  2323  0266                     __ptext3:	
  2324 ;; *************** function _print_aqc1_status *****************
  2325 ;; Defined at:
  2326 ;;		line 349 in file "newmain.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  ldr_1           2   17[BANK0 ] int 
  2329 ;;  ldr_2           2   19[BANK0 ] int 
  2330 ;;  temperature     2   21[BANK0 ] int 
  2331 ;;  state           2   23[BANK0 ] int 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  str            50   25[BANK0 ] unsigned char [50]
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       8       0       0       0
  2344 ;;      Locals:         0      50       0       0       0
  2345 ;;      Temps:          0       0       0       0       0
  2346 ;;      Totals:         0      58       0       0       0
  2347 ;;Total ram usage:       58 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 2
  2350 ;; This function calls:
  2351 ;;		_sprintf
  2352 ;;		_usart_write_string
  2353 ;; This function is called by:
  2354 ;;		_solar_tracker
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _print_aqc1_status
  2361  0266                     _print_aqc1_status:
  2362  0266                     l1480:	
  2363                           ;incstack = 0
  2364                           ; Regs used in _print_aqc1_status: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2365                           
  2366                           
  2367                           ;newmain.c: 349: void print_aqc1_status(int ldr_1, int ldr_2, int temperature, int state
      +                          );newmain.c: 350: {;newmain.c: 351:     char str[50];;newmain.c: 352:  sprintf(str,"\n<A
      +                          QC1>\n	<ldr1> %d </ldr1>\n	<ldr2> %d </ldr2>",ldr_1,ldr_2);
  2368  0266  3090               	movlw	low (STR_8| (0+32768))
  2369  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2370  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0269  00A0               	movwf	sprintf@f
  2372  026A  3089               	movlw	high (STR_8| (0+32768))
  2373  026B  00A1               	movwf	sprintf@f+1
  2374  026C  0832               	movf	print_aqc1_status@ldr_1+1,w
  2375  026D  00A3               	movwf	?_sprintf+3
  2376  026E  0831               	movf	print_aqc1_status@ldr_1,w
  2377  026F  00A2               	movwf	?_sprintf+2
  2378  0270  0834               	movf	print_aqc1_status@ldr_2+1,w
  2379  0271  00A5               	movwf	?_sprintf+5
  2380  0272  0833               	movf	print_aqc1_status@ldr_2,w
  2381  0273  00A4               	movwf	?_sprintf+4
  2382  0274  3039               	movlw	(low (print_aqc1_status@str| 0))& (0+255)
  2383  0275  120A  118A  231D  120A  118A  	fcall	_sprintf
  2384                           
  2385                           ;newmain.c: 353:     usart_write_string(str);
  2386  027A  3039               	movlw	(low (print_aqc1_status@str| 0))& (0+255)
  2387  027B  00F1               	movwf	usart_write_string@text
  2388  027C  3000               	movlw	0
  2389  027D  00F2               	movwf	usart_write_string@text+1
  2390  027E  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  2391                           
  2392                           ;newmain.c: 354:     sprintf(str,"\n	<temperature> %d </temperature>",temperature);
  2393  0283  30BE               	movlw	low (STR_9| (0+32768))
  2394  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0286  00A0               	movwf	sprintf@f
  2397  0287  3089               	movlw	high (STR_9| (0+32768))
  2398  0288  00A1               	movwf	sprintf@f+1
  2399  0289  0836               	movf	print_aqc1_status@temperature+1,w
  2400  028A  00A3               	movwf	?_sprintf+3
  2401  028B  0835               	movf	print_aqc1_status@temperature,w
  2402  028C  00A2               	movwf	?_sprintf+2
  2403  028D  3039               	movlw	(low (print_aqc1_status@str| 0))& (0+255)
  2404  028E  120A  118A  231D  120A  118A  	fcall	_sprintf
  2405                           
  2406                           ;newmain.c: 355:     usart_write_string(str);
  2407  0293  3039               	movlw	(low (print_aqc1_status@str| 0))& (0+255)
  2408  0294  00F1               	movwf	usart_write_string@text
  2409  0295  3000               	movlw	0
  2410  0296  00F2               	movwf	usart_write_string@text+1
  2411  0297  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  2412                           
  2413                           ;newmain.c: 356:     sprintf(str,"\n	<state> %d </state>\n</AQC1>",state);
  2414  029C  30E0               	movlw	low (STR_10| (0+32768))
  2415  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2416  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2417  029F  00A0               	movwf	sprintf@f
  2418  02A0  3089               	movlw	high (STR_10| (0+32768))
  2419  02A1  00A1               	movwf	sprintf@f+1
  2420  02A2  0838               	movf	print_aqc1_status@state+1,w
  2421  02A3  00A3               	movwf	?_sprintf+3
  2422  02A4  0837               	movf	print_aqc1_status@state,w
  2423  02A5  00A2               	movwf	?_sprintf+2
  2424  02A6  3039               	movlw	(low (print_aqc1_status@str| 0))& (0+255)
  2425  02A7  120A  118A  231D  120A  118A  	fcall	_sprintf
  2426                           
  2427                           ;newmain.c: 357:     usart_write_string(str);
  2428  02AC  3039               	movlw	(low (print_aqc1_status@str| 0))& (0+255)
  2429  02AD  00F1               	movwf	usart_write_string@text
  2430  02AE  3000               	movlw	0
  2431  02AF  00F2               	movwf	usart_write_string@text+1
  2432  02B0  120A  118A  2198  120A  118A  	fcall	_usart_write_string
  2433  02B5                     l185:
  2434  02B5  0008               	return
  2435  02B6                     __end_of_print_aqc1_status:
  2436                           
  2437                           	psect	text4
  2438  0198                     __ptext4:	
  2439 ;; *************** function _usart_write_string *****************
  2440 ;; Defined at:
  2441 ;;		line 215 in file "newmain.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  text            2    1[COMMON] PTR unsigned char 
  2444 ;;		 -> print_aqc1_status@str(50), STR_7(87), STR_6(89), STR_5(70), 
  2445 ;;		 -> STR_4(87), STR_3(89), STR_2(71), STR_1(55), 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  i               2    6[COMMON] int 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         2       0       0       0       0
  2458 ;;      Locals:         2       0       0       0       0
  2459 ;;      Temps:          3       0       0       0       0
  2460 ;;      Totals:         7       0       0       0       0
  2461 ;;Total ram usage:        7 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 1
  2464 ;; This function calls:
  2465 ;;		_usart_write_char
  2466 ;; This function is called by:
  2467 ;;		_solar_tracker
  2468 ;;		_print_aqc1_status
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           
  2473                           ;psect for function _usart_write_string
  2474  0198                     _usart_write_string:
  2475  0198                     l1348:	
  2476                           ;incstack = 0
  2477                           ; Regs used in _usart_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2478                           
  2479                           
  2480                           ;newmain.c: 215: void usart_write_string(char *text);newmain.c: 216: {;newmain.c: 217:  
      +                             int i;;newmain.c: 219:     for(i=0; text[i]!='\0'; i++)
  2481  0198  01F6               	clrf	usart_write_string@i
  2482  0199  01F7               	clrf	usart_write_string@i+1
  2483  019A  29BD               	goto	l1354
  2484  019B                     l1350:
  2485                           
  2486                           ;newmain.c: 220:         usart_write_char(text[i]);
  2487  019B  0876               	movf	usart_write_string@i,w
  2488  019C  0771               	addwf	usart_write_string@text,w
  2489  019D  00F4               	movwf	??_usart_write_string+1
  2490  019E  0872               	movf	usart_write_string@text+1,w
  2491  019F  00F3               	movwf	??_usart_write_string
  2492  01A0  1803               	skipnc
  2493  01A1  0AF3               	incf	??_usart_write_string,f
  2494  01A2  1FF6               	btfss	usart_write_string@i,7
  2495  01A3  29A5               	goto	u980
  2496  01A4  03F3               	decf	??_usart_write_string,f
  2497  01A5                     u980:
  2498  01A5  0873               	movf	??_usart_write_string,w
  2499  01A6  00F5               	movwf	??_usart_write_string+2
  2500  01A7  0875               	movf	??_usart_write_string+2,w
  2501  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2502  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2503  01AA  00FF               	movwf	btemp+1
  2504  01AB  0874               	movf	??_usart_write_string+1,w
  2505  01AC  0084               	movwf	4
  2506  01AD  120A  158A  2000  120A  118A  	fcall	stringtab
  2507  01B2  120A  118A  2076  120A  118A  	fcall	_usart_write_char
  2508  01B7                     l1352:
  2509  01B7  3001               	movlw	1
  2510  01B8  07F6               	addwf	usart_write_string@i,f
  2511  01B9  1803               	skipnc
  2512  01BA  0AF7               	incf	usart_write_string@i+1,f
  2513  01BB  3000               	movlw	0
  2514  01BC  07F7               	addwf	usart_write_string@i+1,f
  2515  01BD                     l1354:
  2516  01BD  0876               	movf	usart_write_string@i,w
  2517  01BE  0771               	addwf	usart_write_string@text,w
  2518  01BF  00F4               	movwf	??_usart_write_string+1
  2519  01C0  0872               	movf	usart_write_string@text+1,w
  2520  01C1  00F3               	movwf	??_usart_write_string
  2521  01C2  1803               	skipnc
  2522  01C3  0AF3               	incf	??_usart_write_string,f
  2523  01C4  1FF6               	btfss	usart_write_string@i,7
  2524  01C5  29C7               	goto	u990
  2525  01C6  03F3               	decf	??_usart_write_string,f
  2526  01C7                     u990:
  2527  01C7  0873               	movf	??_usart_write_string,w
  2528  01C8  00F5               	movwf	??_usart_write_string+2
  2529  01C9  0875               	movf	??_usart_write_string+2,w
  2530  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2531  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2532  01CC  00FF               	movwf	btemp+1
  2533  01CD  0874               	movf	??_usart_write_string+1,w
  2534  01CE  0084               	movwf	4
  2535  01CF  120A  158A  2000  120A  118A  	fcall	stringtab
  2536  01D4  3A00               	xorlw	0
  2537  01D5  1D03               	skipz
  2538  01D6  29D8               	goto	u1001
  2539  01D7  29D9               	goto	u1000
  2540  01D8                     u1001:
  2541  01D8  299B               	goto	l1350
  2542  01D9                     u1000:
  2543  01D9                     l128:
  2544  01D9  0008               	return
  2545  01DA                     __end_of_usart_write_string:
  2546                           
  2547                           	psect	text5
  2548  0076                     __ptext5:	
  2549 ;; *************** function _usart_write_char *****************
  2550 ;; Defined at:
  2551 ;;		line 206 in file "newmain.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  c               1    wreg     unsigned char 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  c               1    0[COMMON] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         1       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0
  2568 ;;      Totals:         1       0       0       0       0
  2569 ;;Total ram usage:        1 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_usart_write_string
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _usart_write_char
  2580  0076                     _usart_write_char:
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in _usart_write_char: [wreg]
  2584                           ;usart_write_char@c stored from wreg
  2585  0076  00F0               	movwf	usart_write_char@c
  2586  0077                     l119:	
  2587                           ;newmain.c: 206: void usart_write_char(char c);newmain.c: 207: {;newmain.c: 208:     for
      +                          (;;)
  2588                           
  2589                           
  2590                           ;newmain.c: 209:         if(TXIF)
  2591  0077  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0078  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0079  1E0C               	btfss	12,4	;volatile
  2594  007A  287C               	goto	u831
  2595  007B  287D               	goto	u830
  2596  007C                     u831:
  2597  007C  2877               	goto	l119
  2598  007D                     u830:
  2599  007D                     l1288:
  2600                           
  2601                           ;newmain.c: 212:     TXREG=c;
  2602  007D  0870               	movf	usart_write_char@c,w
  2603  007E  0099               	movwf	25	;volatile
  2604  007F                     l122:
  2605  007F  0008               	return
  2606  0080                     __end_of_usart_write_char:
  2607                           
  2608                           	psect	text6
  2609  031D                     __ptext6:	
  2610 ;; *************** function _sprintf *****************
  2611 ;; Defined at:
  2612 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  sp              1    wreg     PTR unsigned char 
  2615 ;;		 -> print_aqc1_status@str(50), 
  2616 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2617 ;;		 -> STR_10(30), STR_9(34), STR_8(46), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  2620 ;;		 -> print_aqc1_status@str(50), 
  2621 ;;  tmpval          4    0        struct .
  2622 ;;  val             2   13[BANK0 ] unsigned int 
  2623 ;;  cp              2    0        PTR const unsigned char 
  2624 ;;  len             2    0        unsigned int 
  2625 ;;  c               1   16[BANK0 ] unsigned char 
  2626 ;;  prec            1   12[BANK0 ] char 
  2627 ;;  flag            1   11[BANK0 ] unsigned char 
  2628 ;;  ap              1   10[BANK0 ] PTR void [1]
  2629 ;;		 -> ?_sprintf(2), 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  2    0[BANK0 ] int 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2639 ;;      Params:         0       6       0       0       0
  2640 ;;      Locals:         0       7       0       0       0
  2641 ;;      Temps:          0       4       0       0       0
  2642 ;;      Totals:         0      17       0       0       0
  2643 ;;Total ram usage:       17 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; Hardware stack levels required when called: 1
  2646 ;; This function calls:
  2647 ;;		___lwdiv
  2648 ;;		___lwmod
  2649 ;; This function is called by:
  2650 ;;		_print_aqc1_status
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _sprintf
  2656  031D                     _sprintf:
  2657                           
  2658                           ;incstack = 0
  2659                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2660                           ;sprintf@sp stored from wreg
  2661  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2662  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2663  031F  00AF               	movwf	sprintf@sp
  2664  0320                     l1356:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2667  0320  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2668  0321  00A6               	movwf	??_sprintf
  2669  0322  0826               	movf	??_sprintf,w
  2670  0323  00AA               	movwf	sprintf@ap
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2673  0324  2BFC               	goto	l1408
  2674  0325                     l1358:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2677  0325  3025               	movlw	37
  2678  0326  0630               	xorwf	sprintf@c,w
  2679  0327  1903               	btfsc	3,2
  2680  0328  2B2A               	goto	u1011
  2681  0329  2B2B               	goto	u1010
  2682  032A                     u1011:
  2683  032A  2B37               	goto	l1364
  2684  032B                     u1010:
  2685  032B                     l1360:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2688  032B  0830               	movf	sprintf@c,w
  2689  032C  00A6               	movwf	??_sprintf
  2690  032D  082F               	movf	sprintf@sp,w
  2691  032E  0084               	movwf	4
  2692  032F  0826               	movf	??_sprintf,w
  2693  0330  1383               	bcf	3,7	;select IRP bank0
  2694  0331  0080               	movwf	0
  2695  0332                     l1362:
  2696  0332  3001               	movlw	1
  2697  0333  00A6               	movwf	??_sprintf
  2698  0334  0826               	movf	??_sprintf,w
  2699  0335  07AF               	addwf	sprintf@sp,f
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2702  0336  2BFC               	goto	l1408
  2703  0337                     l1364:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2706  0337  01AB               	clrf	sprintf@flag
  2707  0338                     l1368:	
  2708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2709                           
  2710  0338  0821               	movf	sprintf@f+1,w
  2711  0339  00A7               	movwf	??_sprintf+1
  2712  033A  0820               	movf	sprintf@f,w
  2713  033B  00A6               	movwf	??_sprintf
  2714  033C  0AA0               	incf	sprintf@f,f
  2715  033D  1903               	skipnz
  2716  033E  0AA1               	incf	sprintf@f+1,f
  2717  033F  0827               	movf	??_sprintf+1,w
  2718  0340  00FF               	movwf	btemp+1
  2719  0341  0826               	movf	??_sprintf,w
  2720  0342  0084               	movwf	4
  2721  0343  120A  158A  2000  120A  118A  	fcall	stringtab
  2722  0348  00B0               	movwf	sprintf@c
  2723  0349  00A8               	movwf	??_sprintf+2
  2724  034A  01A9               	clrf	??_sprintf+3
  2725                           
  2726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2727                           ; Switch size 1, requested type "simple"
  2728                           ; Number of cases is 1, Range of values is 0 to 0
  2729                           ; switch strategies available:
  2730                           ; Name         Instructions Cycles
  2731                           ; simple_byte            4     3 (average)
  2732                           ; direct_byte           11     8 (fixed)
  2733                           ; jumptable            260     6 (fixed)
  2734                           ;	Chosen strategy is simple_byte
  2735  034B  0829               	movf	??_sprintf+3,w
  2736  034C  3A00               	xorlw	0	; case 0
  2737  034D  1903               	skipnz
  2738  034E  2B50               	goto	l1712
  2739  034F  2BFC               	goto	l1408
  2740  0350                     l1712:
  2741                           
  2742                           ; Switch size 1, requested type "simple"
  2743                           ; Number of cases is 3, Range of values is 0 to 105
  2744                           ; switch strategies available:
  2745                           ; Name         Instructions Cycles
  2746                           ; simple_byte           10     6 (average)
  2747                           ; jumptable            260     6 (fixed)
  2748                           ;	Chosen strategy is simple_byte
  2749  0350  0828               	movf	??_sprintf+2,w
  2750  0351  3A00               	xorlw	0	; case 0
  2751  0352  1903               	skipnz
  2752  0353  2C14               	goto	l1410
  2753  0354  3A64               	xorlw	100	; case 100
  2754  0355  1903               	skipnz
  2755  0356  2B5B               	goto	l1370
  2756  0357  3A0D               	xorlw	13	; case 105
  2757  0358  1903               	skipnz
  2758  0359  2B5B               	goto	l1370
  2759  035A  2BFC               	goto	l1408
  2760  035B                     l1370:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2763  035B  082A               	movf	sprintf@ap,w
  2764  035C  0084               	movwf	4
  2765  035D  1383               	bcf	3,7	;select IRP bank0
  2766  035E  0800               	movf	0,w
  2767  035F  00AD               	movwf	sprintf@val
  2768  0360  0A84               	incf	4,f
  2769  0361  0800               	movf	0,w
  2770  0362  00AE               	movwf	sprintf@val+1
  2771  0363                     l1372:
  2772  0363  3002               	movlw	2
  2773  0364  00A6               	movwf	??_sprintf
  2774  0365  0826               	movf	??_sprintf,w
  2775  0366  07AA               	addwf	sprintf@ap,f
  2776  0367                     l1374:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2779  0367  1FAE               	btfss	sprintf@val+1,7
  2780  0368  2B6A               	goto	u1021
  2781  0369  2B6B               	goto	u1020
  2782  036A                     u1021:
  2783  036A  2B74               	goto	l1380
  2784  036B                     u1020:
  2785  036B                     l1376:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2788  036B  3003               	movlw	3
  2789  036C  00A6               	movwf	??_sprintf
  2790  036D  0826               	movf	??_sprintf,w
  2791  036E  04AB               	iorwf	sprintf@flag,f
  2792  036F                     l1378:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2795  036F  09AD               	comf	sprintf@val,f
  2796  0370  09AE               	comf	sprintf@val+1,f
  2797  0371  0AAD               	incf	sprintf@val,f
  2798  0372  1903               	skipnz
  2799  0373  0AAE               	incf	sprintf@val+1,f
  2800  0374                     l1380:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2803  0374  01B0               	clrf	sprintf@c
  2804  0375  0AB0               	incf	sprintf@c,f
  2805  0376                     l1386:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2808  0376  0830               	movf	sprintf@c,w
  2809  0377  00A6               	movwf	??_sprintf
  2810  0378  0726               	addwf	??_sprintf,w
  2811  0379  3E12               	addlw	low (_dpowers| (0+32768))
  2812  037A  0084               	movwf	4
  2813  037B  3088               	movlw	high (_dpowers| (0+32768))
  2814  037C  1803               	skipnc
  2815  037D  3E01               	addlw	1
  2816  037E  00FF               	movwf	btemp+1
  2817  037F  120A  158A  2000  120A  118A  	fcall	stringtab
  2818  0384  00A7               	movwf	??_sprintf+1
  2819  0385  120A  158A  2000  120A  118A  	fcall	stringtab
  2820  038A  00A8               	movwf	??_sprintf+2
  2821  038B  0828               	movf	??_sprintf+2,w
  2822  038C  022E               	subwf	sprintf@val+1,w
  2823  038D  1D03               	skipz
  2824  038E  2B91               	goto	u1035
  2825  038F  0827               	movf	??_sprintf+1,w
  2826  0390  022D               	subwf	sprintf@val,w
  2827  0391                     u1035:
  2828  0391  1803               	skipnc
  2829  0392  2B94               	goto	u1031
  2830  0393  2B95               	goto	u1030
  2831  0394                     u1031:
  2832  0394  2B96               	goto	l1390
  2833  0395                     u1030:
  2834  0395  2BA0               	goto	l1392
  2835  0396                     l1390:
  2836  0396  3001               	movlw	1
  2837  0397  00A6               	movwf	??_sprintf
  2838  0398  0826               	movf	??_sprintf,w
  2839  0399  07B0               	addwf	sprintf@c,f
  2840  039A  3005               	movlw	5
  2841  039B  0630               	xorwf	sprintf@c,w
  2842  039C  1D03               	btfss	3,2
  2843  039D  2B9F               	goto	u1041
  2844  039E  2BA0               	goto	u1040
  2845  039F                     u1041:
  2846  039F  2B76               	goto	l1386
  2847  03A0                     u1040:
  2848  03A0                     l1392:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2851  03A0  082B               	movf	sprintf@flag,w
  2852  03A1  3903               	andlw	3
  2853  03A2  1903               	btfsc	3,2
  2854  03A3  2BA5               	goto	u1051
  2855  03A4  2BA6               	goto	u1050
  2856  03A5                     u1051:
  2857  03A5  2BB1               	goto	l1398
  2858  03A6                     u1050:
  2859  03A6                     l1394:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2862  03A6  302D               	movlw	45
  2863  03A7  00A6               	movwf	??_sprintf
  2864  03A8  082F               	movf	sprintf@sp,w
  2865  03A9  0084               	movwf	4
  2866  03AA  0826               	movf	??_sprintf,w
  2867  03AB  1383               	bcf	3,7	;select IRP bank0
  2868  03AC  0080               	movwf	0
  2869  03AD                     l1396:
  2870  03AD  3001               	movlw	1
  2871  03AE  00A6               	movwf	??_sprintf
  2872  03AF  0826               	movf	??_sprintf,w
  2873  03B0  07AF               	addwf	sprintf@sp,f
  2874  03B1                     l1398:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2877  03B1  0830               	movf	sprintf@c,w
  2878  03B2  00A6               	movwf	??_sprintf
  2879  03B3  0826               	movf	??_sprintf,w
  2880  03B4  00AC               	movwf	sprintf@prec
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2883  03B5  2BF3               	goto	l1406
  2884  03B6                     l1400:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2887  03B6  300A               	movlw	10
  2888  03B7  00F8               	movwf	___lwmod@divisor
  2889  03B8  3000               	movlw	0
  2890  03B9  00F9               	movwf	___lwmod@divisor+1
  2891  03BA  082C               	movf	sprintf@prec,w
  2892  03BB  00A6               	movwf	??_sprintf
  2893  03BC  0726               	addwf	??_sprintf,w
  2894  03BD  3E12               	addlw	low (_dpowers| (0+32768))
  2895  03BE  0084               	movwf	4
  2896  03BF  3088               	movlw	high (_dpowers| (0+32768))
  2897  03C0  1803               	skipnc
  2898  03C1  3E01               	addlw	1
  2899  03C2  00FF               	movwf	btemp+1
  2900  03C3  120A  158A  2000  120A  118A  	fcall	stringtab
  2901  03C8  00F0               	movwf	___lwdiv@divisor
  2902  03C9  120A  158A  2000  120A  118A  	fcall	stringtab
  2903  03CE  00F1               	movwf	___lwdiv@divisor+1
  2904  03CF  082E               	movf	sprintf@val+1,w
  2905  03D0  00F3               	movwf	___lwdiv@dividend+1
  2906  03D1  082D               	movf	sprintf@val,w
  2907  03D2  00F2               	movwf	___lwdiv@dividend
  2908  03D3  120A  118A  21DA  120A  118A  	fcall	___lwdiv
  2909  03D8  0871               	movf	?___lwdiv+1,w
  2910  03D9  00FB               	movwf	___lwmod@dividend+1
  2911  03DA  0870               	movf	?___lwdiv,w
  2912  03DB  00FA               	movwf	___lwmod@dividend
  2913  03DC  120A  118A  215E  120A  118A  	fcall	___lwmod
  2914  03E1  0878               	movf	?___lwmod,w
  2915  03E2  3E30               	addlw	48
  2916  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2917  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2918  03E5  00A7               	movwf	??_sprintf+1
  2919  03E6  0827               	movf	??_sprintf+1,w
  2920  03E7  00B0               	movwf	sprintf@c
  2921  03E8                     l1402:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2924  03E8  0830               	movf	sprintf@c,w
  2925  03E9  00A6               	movwf	??_sprintf
  2926  03EA  082F               	movf	sprintf@sp,w
  2927  03EB  0084               	movwf	4
  2928  03EC  0826               	movf	??_sprintf,w
  2929  03ED  1383               	bcf	3,7	;select IRP bank0
  2930  03EE  0080               	movwf	0
  2931  03EF                     l1404:
  2932  03EF  3001               	movlw	1
  2933  03F0  00A6               	movwf	??_sprintf
  2934  03F1  0826               	movf	??_sprintf,w
  2935  03F2  07AF               	addwf	sprintf@sp,f
  2936  03F3                     l1406:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2939  03F3  30FF               	movlw	255
  2940  03F4  00A6               	movwf	??_sprintf
  2941  03F5  0826               	movf	??_sprintf,w
  2942  03F6  07AC               	addwf	sprintf@prec,f
  2943  03F7  0A2C               	incf	sprintf@prec,w
  2944  03F8  1D03               	btfss	3,2
  2945  03F9  2BFB               	goto	u1061
  2946  03FA  2BFC               	goto	u1060
  2947  03FB                     u1061:
  2948  03FB  2BB6               	goto	l1400
  2949  03FC                     u1060:
  2950  03FC                     l1408:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2953  03FC  0821               	movf	sprintf@f+1,w
  2954  03FD  00A7               	movwf	??_sprintf+1
  2955  03FE  0820               	movf	sprintf@f,w
  2956  03FF  00A6               	movwf	??_sprintf
  2957  0400  0AA0               	incf	sprintf@f,f
  2958  0401  1903               	skipnz
  2959  0402  0AA1               	incf	sprintf@f+1,f
  2960  0403  0827               	movf	??_sprintf+1,w
  2961  0404  00FF               	movwf	btemp+1
  2962  0405  0826               	movf	??_sprintf,w
  2963  0406  0084               	movwf	4
  2964  0407  120A  158A  2000  120A  118A  	fcall	stringtab
  2965  040C  00A8               	movwf	??_sprintf+2
  2966  040D  0828               	movf	??_sprintf+2,w
  2967  040E  00B0               	movwf	sprintf@c
  2968  040F  0830               	movf	sprintf@c,w
  2969  0410  1D03               	btfss	3,2
  2970  0411  2C13               	goto	u1071
  2971  0412  2C14               	goto	u1070
  2972  0413                     u1071:
  2973  0413  2B25               	goto	l1358
  2974  0414                     u1070:
  2975  0414                     l1410:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2978  0414  082F               	movf	sprintf@sp,w
  2979  0415  0084               	movwf	4
  2980  0416  1383               	bcf	3,7	;select IRP bank0
  2981  0417  0180               	clrf	0
  2982  0418                     l320:
  2983  0418  0008               	return
  2984  0419                     __end_of_sprintf:
  2985                           
  2986                           	psect	text7
  2987  015E                     __ptext7:	
  2988 ;; *************** function ___lwmod *****************
  2989 ;; Defined at:
  2990 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  divisor         2    8[COMMON] unsigned int 
  2993 ;;  dividend        2   10[COMMON] unsigned int 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  counter         1   13[COMMON] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2    8[COMMON] unsigned int 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3005 ;;      Params:         4       0       0       0       0
  3006 ;;      Locals:         1       0       0       0       0
  3007 ;;      Temps:          1       0       0       0       0
  3008 ;;      Totals:         6       0       0       0       0
  3009 ;;Total ram usage:        6 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_sprintf
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function ___lwmod
  3020  015E                     ___lwmod:
  3021  015E                     l1316:	
  3022                           ;incstack = 0
  3023                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3024                           
  3025  015E  0878               	movf	___lwmod@divisor,w
  3026  015F  0479               	iorwf	___lwmod@divisor+1,w
  3027  0160  1903               	btfsc	3,2
  3028  0161  2963               	goto	u911
  3029  0162  2964               	goto	u910
  3030  0163                     u911:
  3031  0163  2993               	goto	l1334
  3032  0164                     u910:
  3033  0164                     l1318:
  3034  0164  01FD               	clrf	___lwmod@counter
  3035  0165  0AFD               	incf	___lwmod@counter,f
  3036  0166  2972               	goto	l1324
  3037  0167                     l1320:
  3038  0167  3001               	movlw	1
  3039  0168                     u925:
  3040  0168  1003               	clrc
  3041  0169  0DF8               	rlf	___lwmod@divisor,f
  3042  016A  0DF9               	rlf	___lwmod@divisor+1,f
  3043  016B  3EFF               	addlw	-1
  3044  016C  1D03               	skipz
  3045  016D  2968               	goto	u925
  3046  016E                     l1322:
  3047  016E  3001               	movlw	1
  3048  016F  00FC               	movwf	??___lwmod
  3049  0170  087C               	movf	??___lwmod,w
  3050  0171  07FD               	addwf	___lwmod@counter,f
  3051  0172                     l1324:
  3052  0172  1FF9               	btfss	___lwmod@divisor+1,7
  3053  0173  2975               	goto	u931
  3054  0174  2976               	goto	u930
  3055  0175                     u931:
  3056  0175  2967               	goto	l1320
  3057  0176                     u930:
  3058  0176                     l1326:
  3059  0176  0879               	movf	___lwmod@divisor+1,w
  3060  0177  027B               	subwf	___lwmod@dividend+1,w
  3061  0178  1D03               	skipz
  3062  0179  297C               	goto	u945
  3063  017A  0878               	movf	___lwmod@divisor,w
  3064  017B  027A               	subwf	___lwmod@dividend,w
  3065  017C                     u945:
  3066  017C  1C03               	skipc
  3067  017D  297F               	goto	u941
  3068  017E  2980               	goto	u940
  3069  017F                     u941:
  3070  017F  2986               	goto	l1330
  3071  0180                     u940:
  3072  0180                     l1328:
  3073  0180  0878               	movf	___lwmod@divisor,w
  3074  0181  02FA               	subwf	___lwmod@dividend,f
  3075  0182  0879               	movf	___lwmod@divisor+1,w
  3076  0183  1C03               	skipc
  3077  0184  03FB               	decf	___lwmod@dividend+1,f
  3078  0185  02FB               	subwf	___lwmod@dividend+1,f
  3079  0186                     l1330:
  3080  0186  3001               	movlw	1
  3081  0187                     u955:
  3082  0187  1003               	clrc
  3083  0188  0CF9               	rrf	___lwmod@divisor+1,f
  3084  0189  0CF8               	rrf	___lwmod@divisor,f
  3085  018A  3EFF               	addlw	-1
  3086  018B  1D03               	skipz
  3087  018C  2987               	goto	u955
  3088  018D                     l1332:
  3089  018D  3001               	movlw	1
  3090  018E  02FD               	subwf	___lwmod@counter,f
  3091  018F  1D03               	btfss	3,2
  3092  0190  2992               	goto	u961
  3093  0191  2993               	goto	u960
  3094  0192                     u961:
  3095  0192  2976               	goto	l1326
  3096  0193                     u960:
  3097  0193                     l1334:
  3098  0193  087B               	movf	___lwmod@dividend+1,w
  3099  0194  00F9               	movwf	?___lwmod+1
  3100  0195  087A               	movf	___lwmod@dividend,w
  3101  0196  00F8               	movwf	?___lwmod
  3102  0197                     l606:
  3103  0197  0008               	return
  3104  0198                     __end_of___lwmod:
  3105                           
  3106                           	psect	text8
  3107  01DA                     __ptext8:	
  3108 ;; *************** function ___lwdiv *****************
  3109 ;; Defined at:
  3110 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  divisor         2    0[COMMON] unsigned int 
  3113 ;;  dividend        2    2[COMMON] unsigned int 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  quotient        2    5[COMMON] unsigned int 
  3116 ;;  counter         1    7[COMMON] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  2    0[COMMON] unsigned int 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         4       0       0       0       0
  3127 ;;      Locals:         3       0       0       0       0
  3128 ;;      Temps:          1       0       0       0       0
  3129 ;;      Totals:         8       0       0       0       0
  3130 ;;Total ram usage:        8 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_sprintf
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           
  3140                           ;psect for function ___lwdiv
  3141  01DA                     ___lwdiv:
  3142  01DA                     l1290:	
  3143                           ;incstack = 0
  3144                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3145                           
  3146  01DA  01F5               	clrf	___lwdiv@quotient
  3147  01DB  01F6               	clrf	___lwdiv@quotient+1
  3148  01DC                     l1292:
  3149  01DC  0870               	movf	___lwdiv@divisor,w
  3150  01DD  0471               	iorwf	___lwdiv@divisor+1,w
  3151  01DE  1903               	btfsc	3,2
  3152  01DF  29E1               	goto	u841
  3153  01E0  29E2               	goto	u840
  3154  01E1                     u841:
  3155  01E1  2A19               	goto	l1312
  3156  01E2                     u840:
  3157  01E2                     l1294:
  3158  01E2  01F7               	clrf	___lwdiv@counter
  3159  01E3  0AF7               	incf	___lwdiv@counter,f
  3160  01E4  29F0               	goto	l1300
  3161  01E5                     l1296:
  3162  01E5  3001               	movlw	1
  3163  01E6                     u855:
  3164  01E6  1003               	clrc
  3165  01E7  0DF0               	rlf	___lwdiv@divisor,f
  3166  01E8  0DF1               	rlf	___lwdiv@divisor+1,f
  3167  01E9  3EFF               	addlw	-1
  3168  01EA  1D03               	skipz
  3169  01EB  29E6               	goto	u855
  3170  01EC                     l1298:
  3171  01EC  3001               	movlw	1
  3172  01ED  00F4               	movwf	??___lwdiv
  3173  01EE  0874               	movf	??___lwdiv,w
  3174  01EF  07F7               	addwf	___lwdiv@counter,f
  3175  01F0                     l1300:
  3176  01F0  1FF1               	btfss	___lwdiv@divisor+1,7
  3177  01F1  29F3               	goto	u861
  3178  01F2  29F4               	goto	u860
  3179  01F3                     u861:
  3180  01F3  29E5               	goto	l1296
  3181  01F4                     u860:
  3182  01F4                     l1302:
  3183  01F4  3001               	movlw	1
  3184  01F5                     u875:
  3185  01F5  1003               	clrc
  3186  01F6  0DF5               	rlf	___lwdiv@quotient,f
  3187  01F7  0DF6               	rlf	___lwdiv@quotient+1,f
  3188  01F8  3EFF               	addlw	-1
  3189  01F9  1D03               	skipz
  3190  01FA  29F5               	goto	u875
  3191  01FB  0871               	movf	___lwdiv@divisor+1,w
  3192  01FC  0273               	subwf	___lwdiv@dividend+1,w
  3193  01FD  1D03               	skipz
  3194  01FE  2A01               	goto	u885
  3195  01FF  0870               	movf	___lwdiv@divisor,w
  3196  0200  0272               	subwf	___lwdiv@dividend,w
  3197  0201                     u885:
  3198  0201  1C03               	skipc
  3199  0202  2A04               	goto	u881
  3200  0203  2A05               	goto	u880
  3201  0204                     u881:
  3202  0204  2A0C               	goto	l1308
  3203  0205                     u880:
  3204  0205                     l1304:
  3205  0205  0870               	movf	___lwdiv@divisor,w
  3206  0206  02F2               	subwf	___lwdiv@dividend,f
  3207  0207  0871               	movf	___lwdiv@divisor+1,w
  3208  0208  1C03               	skipc
  3209  0209  03F3               	decf	___lwdiv@dividend+1,f
  3210  020A  02F3               	subwf	___lwdiv@dividend+1,f
  3211  020B                     l1306:
  3212  020B  1475               	bsf	___lwdiv@quotient,0
  3213  020C                     l1308:
  3214  020C  3001               	movlw	1
  3215  020D                     u895:
  3216  020D  1003               	clrc
  3217  020E  0CF1               	rrf	___lwdiv@divisor+1,f
  3218  020F  0CF0               	rrf	___lwdiv@divisor,f
  3219  0210  3EFF               	addlw	-1
  3220  0211  1D03               	skipz
  3221  0212  2A0D               	goto	u895
  3222  0213                     l1310:
  3223  0213  3001               	movlw	1
  3224  0214  02F7               	subwf	___lwdiv@counter,f
  3225  0215  1D03               	btfss	3,2
  3226  0216  2A18               	goto	u901
  3227  0217  2A19               	goto	u900
  3228  0218                     u901:
  3229  0218  29F4               	goto	l1302
  3230  0219                     u900:
  3231  0219                     l1312:
  3232  0219  0876               	movf	___lwdiv@quotient+1,w
  3233  021A  00F1               	movwf	?___lwdiv+1
  3234  021B  0875               	movf	___lwdiv@quotient,w
  3235  021C  00F0               	movwf	?___lwdiv
  3236  021D                     l596:
  3237  021D  0008               	return
  3238  021E                     __end_of___lwdiv:
  3239                           
  3240                           	psect	text9
  3241  005E                     __ptext9:	
  3242 ;; *************** function _moveRight *****************
  3243 ;; Defined at:
  3244 ;;		line 103 in file "newmain.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		None
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       0       0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_solar_tracker
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           
  3272                           ;psect for function _moveRight
  3273  005E                     _moveRight:
  3274  005E                     l1420:	
  3275                           ;incstack = 0
  3276                           ; Regs used in _moveRight: []
  3277                           
  3278                           
  3279                           ;newmain.c: 105:     PORTDbits.RD1 = 0;
  3280  005E  1283               	bcf	3,5	;RP0=0, select bank0
  3281  005F  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0060  1088               	bcf	8,1	;volatile
  3283                           
  3284                           ;newmain.c: 106:     PORTBbits.RB1 = 1;
  3285  0061  1486               	bsf	6,1	;volatile
  3286  0062                     l69:
  3287  0062  0008               	return
  3288  0063                     __end_of_moveRight:
  3289                           
  3290                           	psect	text10
  3291  0059                     __ptext10:	
  3292 ;; *************** function _moveLeft *****************
  3293 ;; Defined at:
  3294 ;;		line 97 in file "newmain.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		None
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3308 ;;      Params:         0       0       0       0       0
  3309 ;;      Locals:         0       0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0
  3311 ;;      Totals:         0       0       0       0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_solar_tracker
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           
  3322                           ;psect for function _moveLeft
  3323  0059                     _moveLeft:
  3324  0059                     l1418:	
  3325                           ;incstack = 0
  3326                           ; Regs used in _moveLeft: []
  3327                           
  3328                           
  3329                           ;newmain.c: 99:     PORTBbits.RB1 = 0;
  3330  0059  1283               	bcf	3,5	;RP0=0, select bank0
  3331  005A  1303               	bcf	3,6	;RP1=0, select bank0
  3332  005B  1086               	bcf	6,1	;volatile
  3333                           
  3334                           ;newmain.c: 100:     PORTDbits.RD1 = 1;
  3335  005C  1488               	bsf	8,1	;volatile
  3336  005D                     l66:
  3337  005D  0008               	return
  3338  005E                     __end_of_moveLeft:
  3339                           
  3340                           	psect	text11
  3341  021E                     __ptext11:	
  3342 ;; *************** function _debounce *****************
  3343 ;; Defined at:
  3344 ;;		line 223 in file "newmain.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  port            2    5[COMMON] int 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         2       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0
  3361 ;;      Totals:         2       0       0       0       0
  3362 ;;Total ram usage:        2 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 1
  3365 ;; This function calls:
  3366 ;;		_delay
  3367 ;; This function is called by:
  3368 ;;		_solar_tracker
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           
  3374                           ;psect for function _debounce
  3375  021E                     _debounce:
  3376  021E                     l1446:	
  3377                           ;incstack = 0
  3378                           ; Regs used in _debounce: [wreg+status,2+status,0+pclath+cstack]
  3379                           
  3380                           
  3381                           ;newmain.c: 223: void debounce(int port);newmain.c: 224: {;newmain.c: 225:     if(port==
      +                          3)
  3382  021E  3003               	movlw	3
  3383  021F  0675               	xorwf	debounce@port,w
  3384  0220  0476               	iorwf	debounce@port+1,w
  3385  0221  1D03               	btfss	3,2
  3386  0222  2A24               	goto	u1121
  3387  0223  2A25               	goto	u1120
  3388  0224                     u1121:
  3389  0224  2A36               	goto	l1454
  3390  0225                     u1120:
  3391  0225  2A2F               	goto	l1452
  3392  0226                     l1450:
  3393                           
  3394                           ;newmain.c: 228:             delay(1000);
  3395  0226  30E8               	movlw	232
  3396  0227  00F0               	movwf	delay@t
  3397  0228  3003               	movlw	3
  3398  0229  00F1               	movwf	delay@t+1
  3399  022A  120A  118A  20A7  120A  118A  	fcall	_delay
  3400  022F                     l1452:
  3401                           
  3402                           ;newmain.c: 227:         while(!PORTBbits.RB3)
  3403  022F  1283               	bcf	3,5	;RP0=0, select bank0
  3404  0230  1303               	bcf	3,6	;RP1=0, select bank0
  3405  0231  1D86               	btfss	6,3	;volatile
  3406  0232  2A34               	goto	u1131
  3407  0233  2A35               	goto	u1130
  3408  0234                     u1131:
  3409  0234  2A26               	goto	l1450
  3410  0235                     u1130:
  3411  0235  2A65               	goto	l145
  3412  0236                     l1454:
  3413  0236  3004               	movlw	4
  3414  0237  0675               	xorwf	debounce@port,w
  3415  0238  0476               	iorwf	debounce@port+1,w
  3416  0239  1D03               	btfss	3,2
  3417  023A  2A3C               	goto	u1141
  3418  023B  2A3D               	goto	u1140
  3419  023C                     u1141:
  3420  023C  2A4E               	goto	l1462
  3421  023D                     u1140:
  3422  023D  2A47               	goto	l1460
  3423  023E                     l1458:
  3424                           
  3425                           ;newmain.c: 233:             delay(1000);
  3426  023E  30E8               	movlw	232
  3427  023F  00F0               	movwf	delay@t
  3428  0240  3003               	movlw	3
  3429  0241  00F1               	movwf	delay@t+1
  3430  0242  120A  118A  20A7  120A  118A  	fcall	_delay
  3431  0247                     l1460:
  3432                           
  3433                           ;newmain.c: 232:         while(!PORTBbits.RB4)
  3434  0247  1283               	bcf	3,5	;RP0=0, select bank0
  3435  0248  1303               	bcf	3,6	;RP1=0, select bank0
  3436  0249  1E06               	btfss	6,4	;volatile
  3437  024A  2A4C               	goto	u1151
  3438  024B  2A4D               	goto	u1150
  3439  024C                     u1151:
  3440  024C  2A3E               	goto	l1458
  3441  024D                     u1150:
  3442  024D  2A65               	goto	l145
  3443  024E                     l1462:
  3444  024E  3005               	movlw	5
  3445  024F  0675               	xorwf	debounce@port,w
  3446  0250  0476               	iorwf	debounce@port+1,w
  3447  0251  1D03               	btfss	3,2
  3448  0252  2A54               	goto	u1161
  3449  0253  2A55               	goto	u1160
  3450  0254                     u1161:
  3451  0254  2A65               	goto	l145
  3452  0255                     u1160:
  3453  0255  2A5F               	goto	l1468
  3454  0256                     l1466:
  3455                           
  3456                           ;newmain.c: 238:             delay(1000);
  3457  0256  30E8               	movlw	232
  3458  0257  00F0               	movwf	delay@t
  3459  0258  3003               	movlw	3
  3460  0259  00F1               	movwf	delay@t+1
  3461  025A  120A  118A  20A7  120A  118A  	fcall	_delay
  3462  025F                     l1468:
  3463                           
  3464                           ;newmain.c: 237:         while(!PORTBbits.RB5)
  3465  025F  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0260  1303               	bcf	3,6	;RP1=0, select bank0
  3467  0261  1E86               	btfss	6,5	;volatile
  3468  0262  2A64               	goto	u1171
  3469  0263  2A65               	goto	u1170
  3470  0264                     u1171:
  3471  0264  2A56               	goto	l1466
  3472  0265                     u1170:
  3473  0265                     l145:
  3474  0265  0008               	return
  3475  0266                     __end_of_debounce:
  3476                           
  3477                           	psect	text12
  3478  00A7                     __ptext12:	
  3479 ;; *************** function _delay *****************
  3480 ;; Defined at:
  3481 ;;		line 138 in file "newmain.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  t               2    0[COMMON] int 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  i               2    3[COMMON] int 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3495 ;;      Params:         2       0       0       0       0
  3496 ;;      Locals:         2       0       0       0       0
  3497 ;;      Temps:          1       0       0       0       0
  3498 ;;      Totals:         5       0       0       0       0
  3499 ;;Total ram usage:        5 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_debounce
  3505 ;;		_solar_tracker
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _delay
  3512  00A7                     _delay:
  3513  00A7                     l1344:	
  3514                           ;incstack = 0
  3515                           ; Regs used in _delay: [wreg+status,2]
  3516                           
  3517                           
  3518                           ;newmain.c: 138: void delay(int t);newmain.c: 139: {;newmain.c: 140:     int i;;newmain.
      +                          c: 141:     for(i=0;i<t;i++);
  3519  00A7  01F3               	clrf	delay@i
  3520  00A8  01F4               	clrf	delay@i+1
  3521  00A9  28B0               	goto	l86
  3522  00AA                     l1346:
  3523  00AA  3001               	movlw	1
  3524  00AB  07F3               	addwf	delay@i,f
  3525  00AC  1803               	skipnc
  3526  00AD  0AF4               	incf	delay@i+1,f
  3527  00AE  3000               	movlw	0
  3528  00AF  07F4               	addwf	delay@i+1,f
  3529  00B0                     l86:
  3530  00B0  0874               	movf	delay@i+1,w
  3531  00B1  3A80               	xorlw	128
  3532  00B2  00F2               	movwf	??_delay
  3533  00B3  0871               	movf	delay@t+1,w
  3534  00B4  3A80               	xorlw	128
  3535  00B5  0272               	subwf	??_delay,w
  3536  00B6  1D03               	skipz
  3537  00B7  28BA               	goto	u975
  3538  00B8  0870               	movf	delay@t,w
  3539  00B9  0273               	subwf	delay@i,w
  3540  00BA                     u975:
  3541  00BA  1C03               	skipc
  3542  00BB  28BD               	goto	u971
  3543  00BC  28BE               	goto	u970
  3544  00BD                     u971:
  3545  00BD  28AA               	goto	l1346
  3546  00BE                     u970:
  3547  00BE                     l89:
  3548  00BE  0008               	return
  3549  00BF                     __end_of_delay:
  3550                           
  3551                           	psect	text13
  3552  0092                     __ptext13:	
  3553 ;; *************** function _check_temperature *****************
  3554 ;; Defined at:
  3555 ;;		line 360 in file "newmain.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  temperature     2    0[COMMON] int 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2    0[COMMON] int 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, btemp+1
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3569 ;;      Params:         2       0       0       0       0
  3570 ;;      Locals:         0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0
  3572 ;;      Totals:         2       0       0       0       0
  3573 ;;Total ram usage:        2 bytes
  3574 ;; Hardware stack levels used: 1
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_solar_tracker
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           
  3583                           ;psect for function _check_temperature
  3584  0092                     _check_temperature:
  3585  0092                     l1470:	
  3586                           ;incstack = 0
  3587                           ; Regs used in _check_temperature: [wreg+status,2+btemp+1]
  3588                           
  3589                           
  3590                           ;newmain.c: 360: int check_temperature(int temperature);newmain.c: 361: {;newmain.c: 362
      +                          :     if(temperature>40)
  3591  0092  0871               	movf	check_temperature@temperature+1,w
  3592  0093  3A80               	xorlw	128
  3593  0094  00FF               	movwf	btemp+1
  3594  0095  3080               	movlw	128
  3595  0096  027F               	subwf	btemp+1,w
  3596  0097  1D03               	skipz
  3597  0098  289B               	goto	u1185
  3598  0099  3029               	movlw	41
  3599  009A  0270               	subwf	check_temperature@temperature,w
  3600  009B                     u1185:
  3601  009B  1C03               	skipc
  3602  009C  289E               	goto	u1181
  3603  009D  289F               	goto	u1180
  3604  009E                     u1181:
  3605  009E  28A4               	goto	l1476
  3606  009F                     u1180:
  3607  009F                     l1472:
  3608                           
  3609                           ;newmain.c: 363:         return 1;
  3610  009F  3001               	movlw	1
  3611  00A0  00F0               	movwf	?_check_temperature
  3612  00A1  3000               	movlw	0
  3613  00A2  00F1               	movwf	?_check_temperature+1
  3614  00A3  28A6               	goto	l189
  3615  00A4                     l1476:
  3616                           
  3617                           ;newmain.c: 364:     return 0;
  3618  00A4  01F0               	clrf	?_check_temperature
  3619  00A5  01F1               	clrf	?_check_temperature+1
  3620  00A6                     l189:
  3621  00A6  0008               	return
  3622  00A7                     __end_of_check_temperature:
  3623                           
  3624                           	psect	text14
  3625  00F7                     __ptext14:	
  3626 ;; *************** function _change_heater_state *****************
  3627 ;; Defined at:
  3628 ;;		line 367 in file "newmain.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3642 ;;      Params:         0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_solar_tracker
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           
  3657                           ;psect for function _change_heater_state
  3658  00F7                     _change_heater_state:
  3659  00F7                     l1482:	
  3660                           ;incstack = 0
  3661                           ; Regs used in _change_heater_state: [status,0]
  3662                           
  3663                           
  3664                           ;newmain.c: 369:     PORTCbits.RC5 = !PORTCbits.RC5;
  3665  00F7  1003               	clrc
  3666  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  3667  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  3668  00FA  1E87               	btfss	7,5	;volatile
  3669  00FB  1403               	setc
  3670  00FC  1803               	btfsc	3,0
  3671  00FD  28FF               	goto	u1191
  3672  00FE  2903               	goto	u1190
  3673  00FF                     u1191:
  3674  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  3675  0100  1303               	bcf	3,6	;RP1=0, select bank0
  3676  0101  1687               	bsf	7,5	;volatile
  3677  0102  2906               	goto	u1204
  3678  0103                     u1190:
  3679  0103  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0104  1303               	bcf	3,6	;RP1=0, select bank0
  3681  0105  1287               	bcf	7,5	;volatile
  3682  0106                     u1204:
  3683                           
  3684                           ;newmain.c: 370:     PORTDbits.RD4 = !PORTDbits.RD4;
  3685  0106  1003               	clrc
  3686  0107  1E08               	btfss	8,4	;volatile
  3687  0108  1403               	setc
  3688  0109  1803               	btfsc	3,0
  3689  010A  290C               	goto	u1211
  3690  010B  2910               	goto	u1210
  3691  010C                     u1211:
  3692  010C  1283               	bcf	3,5	;RP0=0, select bank0
  3693  010D  1303               	bcf	3,6	;RP1=0, select bank0
  3694  010E  1608               	bsf	8,4	;volatile
  3695  010F  2913               	goto	u1224
  3696  0110                     u1210:
  3697  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3698  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3699  0112  1208               	bcf	8,4	;volatile
  3700  0113                     u1224:
  3701  0113                     l192:
  3702  0113  0008               	return
  3703  0114                     __end_of_change_heater_state:
  3704                           
  3705                           	psect	text15
  3706  00DA                     __ptext15:	
  3707 ;; *************** function _change_cooler_state *****************
  3708 ;; Defined at:
  3709 ;;		line 373 in file "newmain.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         0       0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0
  3726 ;;      Totals:         0       0       0       0       0
  3727 ;;Total ram usage:        0 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_solar_tracker
  3733 ;;		_main
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           
  3738                           ;psect for function _change_cooler_state
  3739  00DA                     _change_cooler_state:
  3740  00DA                     l1484:	
  3741                           ;incstack = 0
  3742                           ; Regs used in _change_cooler_state: [status,0]
  3743                           
  3744                           
  3745                           ;newmain.c: 375:     PORTCbits.RC2 = !PORTCbits.RC2;
  3746  00DA  1003               	clrc
  3747  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  3748  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  3749  00DD  1D07               	btfss	7,2	;volatile
  3750  00DE  1403               	setc
  3751  00DF  1803               	btfsc	3,0
  3752  00E0  28E2               	goto	u1231
  3753  00E1  28E6               	goto	u1230
  3754  00E2                     u1231:
  3755  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  3756  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  3757  00E4  1507               	bsf	7,2	;volatile
  3758  00E5  28E9               	goto	u1244
  3759  00E6                     u1230:
  3760  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  3761  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  3762  00E8  1107               	bcf	7,2	;volatile
  3763  00E9                     u1244:
  3764                           
  3765                           ;newmain.c: 376:     PORTDbits.RD5 = !PORTDbits.RD5;
  3766  00E9  1003               	clrc
  3767  00EA  1E88               	btfss	8,5	;volatile
  3768  00EB  1403               	setc
  3769  00EC  1803               	btfsc	3,0
  3770  00ED  28EF               	goto	u1251
  3771  00EE  28F3               	goto	u1250
  3772  00EF                     u1251:
  3773  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3774  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  3775  00F1  1688               	bsf	8,5	;volatile
  3776  00F2  28F6               	goto	u1264
  3777  00F3                     u1250:
  3778  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  3779  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  3780  00F5  1288               	bcf	8,5	;volatile
  3781  00F6                     u1264:
  3782  00F6                     l195:
  3783  00F6  0008               	return
  3784  00F7                     __end_of_change_cooler_state:
  3785                           
  3786                           	psect	text16
  3787  0114                     __ptext16:	
  3788 ;; *************** function _changeMode *****************
  3789 ;; Defined at:
  3790 ;;		line 126 in file "newmain.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  state           2    0[COMMON] int 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  2    0[COMMON] int 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         2       0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0
  3806 ;;      Temps:          2       0       0       0       0
  3807 ;;      Totals:         4       0       0       0       0
  3808 ;;Total ram usage:        4 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 2
  3811 ;; This function calls:
  3812 ;;		_setNormal
  3813 ;;		_setStandby
  3814 ;; This function is called by:
  3815 ;;		_solar_tracker
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _changeMode
  3822  0114                     _changeMode:
  3823  0114                     l1422:	
  3824                           ;incstack = 0
  3825                           ; Regs used in _changeMode: [wreg+status,2+status,0+pclath+cstack]
  3826                           
  3827                           
  3828                           ;newmain.c: 126: int changeMode(int state);newmain.c: 127: {;newmain.c: 128:     state =
      +                           !state;
  3829  0114  0870               	movf	changeMode@state,w
  3830  0115  0471               	iorwf	changeMode@state+1,w
  3831  0116  1903               	btfsc	3,2
  3832  0117  2919               	goto	u1081
  3833  0118  291B               	goto	u1080
  3834  0119                     u1081:
  3835  0119  3001               	movlw	1
  3836  011A  291C               	goto	u1090
  3837  011B                     u1080:
  3838  011B  3000               	movlw	0
  3839  011C                     u1090:
  3840  011C  00F2               	movwf	??_changeMode
  3841  011D  01F3               	clrf	??_changeMode+1
  3842  011E  0872               	movf	??_changeMode,w
  3843  011F  00F0               	movwf	changeMode@state
  3844  0120  0873               	movf	??_changeMode+1,w
  3845  0121  00F1               	movwf	changeMode@state+1
  3846                           
  3847                           ;newmain.c: 130:     if(state==1)
  3848  0122  0370               	decf	changeMode@state,w
  3849  0123  0471               	iorwf	changeMode@state+1,w
  3850  0124  1D03               	btfss	3,2
  3851  0125  2927               	goto	u1101
  3852  0126  2928               	goto	u1100
  3853  0127                     u1101:
  3854  0127  292E               	goto	l1426
  3855  0128                     u1100:
  3856  0128                     l1424:
  3857                           
  3858                           ;newmain.c: 131:         setNormal();
  3859  0128  120A  118A  2050  120A  118A  	fcall	_setNormal
  3860  012D  2933               	goto	l1428
  3861  012E                     l1426:
  3862                           
  3863                           ;newmain.c: 133:         setStandby();
  3864  012E  120A  118A  2063  120A  118A  	fcall	_setStandby
  3865  0133                     l1428:
  3866  0133                     l83:	
  3867                           ;newmain.c: 135:     return state;
  3868                           
  3869  0133  0008               	return
  3870  0134                     __end_of_changeMode:
  3871                           
  3872                           	psect	text17
  3873  0063                     __ptext17:	
  3874 ;; *************** function _setStandby *****************
  3875 ;; Defined at:
  3876 ;;		line 120 in file "newmain.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		status,2, status,0, pclath, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3890 ;;      Params:         0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 1
  3897 ;; This function calls:
  3898 ;;		_stopMotor
  3899 ;; This function is called by:
  3900 ;;		_changeMode
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _setStandby
  3906  0063                     _setStandby:
  3907  0063                     l1340:	
  3908                           ;incstack = 0
  3909                           ; Regs used in _setStandby: [status,2+status,0+pclath+cstack]
  3910                           
  3911                           
  3912                           ;newmain.c: 122:     stopMotor();
  3913  0063  120A  118A  2054  120A  118A  	fcall	_stopMotor
  3914  0068                     l1342:
  3915                           
  3916                           ;newmain.c: 123:     PORTDbits.RD3 = 0;
  3917  0068  1283               	bcf	3,5	;RP0=0, select bank0
  3918  0069  1303               	bcf	3,6	;RP1=0, select bank0
  3919  006A  1188               	bcf	8,3	;volatile
  3920  006B                     l78:
  3921  006B  0008               	return
  3922  006C                     __end_of_setStandby:
  3923                           
  3924                           	psect	text18
  3925  0054                     __ptext18:	
  3926 ;; *************** function _stopMotor *****************
  3927 ;; Defined at:
  3928 ;;		line 109 in file "newmain.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		None
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0
  3945 ;;      Totals:         0       0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_setStandby
  3952 ;;		_solar_tracker
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _stopMotor
  3958  0054                     _stopMotor:
  3959  0054                     l1284:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _stopMotor: []
  3962                           
  3963                           
  3964                           ;newmain.c: 111:     PORTDbits.RD1 = 0;
  3965  0054  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0055  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0056  1088               	bcf	8,1	;volatile
  3968                           
  3969                           ;newmain.c: 112:     PORTBbits.RB1 = 0;
  3970  0057  1086               	bcf	6,1	;volatile
  3971  0058                     l72:
  3972  0058  0008               	return
  3973  0059                     __end_of_stopMotor:
  3974                           
  3975                           	psect	text19
  3976  0050                     __ptext19:	
  3977 ;; *************** function _setNormal *****************
  3978 ;; Defined at:
  3979 ;;		line 115 in file "newmain.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		None
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_changeMode
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function _setNormal
  4008  0050                     _setNormal:
  4009  0050                     l1338:	
  4010                           ;incstack = 0
  4011                           ; Regs used in _setNormal: []
  4012                           
  4013                           
  4014                           ;newmain.c: 117:     PORTDbits.RD3 = 1;
  4015  0050  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0051  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0052  1588               	bsf	8,3	;volatile
  4018  0053                     l75:
  4019  0053  0008               	return
  4020  0054                     __end_of_setNormal:
  4021                           
  4022                           	psect	text20
  4023  00BF                     __ptext20:	
  4024 ;; *************** function _adc_read *****************
  4025 ;; Defined at:
  4026 ;;		line 151 in file "newmain.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  ch              2    0[COMMON] int 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  2    0[COMMON] int 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4040 ;;      Params:         2       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0
  4042 ;;      Temps:          1       0       0       0       0
  4043 ;;      Totals:         3       0       0       0       0
  4044 ;;Total ram usage:        3 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_solar_tracker
  4050 ;;		_main
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           
  4055                           ;psect for function _adc_read
  4056  00BF                     _adc_read:
  4057  00BF                     l1432:	
  4058                           ;incstack = 0
  4059                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  4060                           
  4061                           
  4062                           ;newmain.c: 151: int adc_read(int ch);newmain.c: 152: {;newmain.c: 153:     ADCON1bits.A
      +                          DFM = 1;
  4063  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  4064  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  4065  00C1  179F               	bsf	31,7	;volatile
  4066  00C2                     l1434:
  4067                           
  4068                           ;newmain.c: 154:     ADCON0bits.CHS = ch;
  4069  00C2  0870               	movf	adc_read@ch,w
  4070  00C3  00F2               	movwf	??_adc_read
  4071  00C4  0DF2               	rlf	??_adc_read,f
  4072  00C5  0DF2               	rlf	??_adc_read,f
  4073  00C6  0DF2               	rlf	??_adc_read,f
  4074  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  4075  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  4076  00C9  081F               	movf	31,w	;volatile
  4077  00CA  0672               	xorwf	??_adc_read,w
  4078  00CB  39C7               	andlw	-57
  4079  00CC  0672               	xorwf	??_adc_read,w
  4080  00CD  009F               	movwf	31	;volatile
  4081  00CE                     l1436:
  4082                           
  4083                           ;newmain.c: 156:     ADCON0bits.GO_nDONE = 1;
  4084  00CE  151F               	bsf	31,2	;volatile
  4085  00CF                     l1438:
  4086                           
  4087                           ;newmain.c: 158:         if(!ADCON0bits.GO_nDONE)
  4088  00CF  191F               	btfsc	31,2	;volatile
  4089  00D0  28D2               	goto	u1111
  4090  00D1  28D3               	goto	u1110
  4091  00D2                     u1111:
  4092  00D2  28CF               	goto	l1438
  4093  00D3                     u1110:
  4094  00D3                     l1442:
  4095                           
  4096                           ;newmain.c: 162:     return ((ADRESH<<8) + ADRESL);
  4097  00D3  081E               	movf	30,w	;volatile
  4098  00D4  00F1               	movwf	?_adc_read+1
  4099  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  4100  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  4101  00D7  081E               	movf	30,w	;volatile
  4102  00D8  00F0               	movwf	?_adc_read
  4103  00D9                     l98:
  4104  00D9  0008               	return
  4105  00DA                     __end_of_adc_read:
  4106                           
  4107                           	psect	text21
  4108  02B6                     __ptext21:	
  4109 ;; *************** function ___awdiv *****************
  4110 ;; Defined at:
  4111 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  divisor         2    3[COMMON] int 
  4114 ;;  dividend        2    5[COMMON] int 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  quotient        2   10[COMMON] int 
  4117 ;;  sign            1    9[COMMON] unsigned char 
  4118 ;;  counter         1    8[COMMON] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2    3[COMMON] int 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4128 ;;      Params:         4       0       0       0       0
  4129 ;;      Locals:         4       0       0       0       0
  4130 ;;      Temps:          1       0       0       0       0
  4131 ;;      Totals:         9       0       0       0       0
  4132 ;;Total ram usage:        9 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_solar_tracker
  4138 ;;		_main
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function ___awdiv
  4144  02B6                     ___awdiv:
  4145  02B6                     l1486:	
  4146                           ;incstack = 0
  4147                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4148                           
  4149  02B6  01F9               	clrf	___awdiv@sign
  4150  02B7                     l1488:
  4151  02B7  1FF4               	btfss	___awdiv@divisor+1,7
  4152  02B8  2ABA               	goto	u1271
  4153  02B9  2ABB               	goto	u1270
  4154  02BA                     u1271:
  4155  02BA  2AC2               	goto	l1494
  4156  02BB                     u1270:
  4157  02BB                     l1490:
  4158  02BB  09F3               	comf	___awdiv@divisor,f
  4159  02BC  09F4               	comf	___awdiv@divisor+1,f
  4160  02BD  0AF3               	incf	___awdiv@divisor,f
  4161  02BE  1903               	skipnz
  4162  02BF  0AF4               	incf	___awdiv@divisor+1,f
  4163  02C0                     l1492:
  4164  02C0  01F9               	clrf	___awdiv@sign
  4165  02C1  0AF9               	incf	___awdiv@sign,f
  4166  02C2                     l1494:
  4167  02C2  1FF6               	btfss	___awdiv@dividend+1,7
  4168  02C3  2AC5               	goto	u1281
  4169  02C4  2AC6               	goto	u1280
  4170  02C5                     u1281:
  4171  02C5  2ACF               	goto	l1500
  4172  02C6                     u1280:
  4173  02C6                     l1496:
  4174  02C6  09F5               	comf	___awdiv@dividend,f
  4175  02C7  09F6               	comf	___awdiv@dividend+1,f
  4176  02C8  0AF5               	incf	___awdiv@dividend,f
  4177  02C9  1903               	skipnz
  4178  02CA  0AF6               	incf	___awdiv@dividend+1,f
  4179  02CB                     l1498:
  4180  02CB  3001               	movlw	1
  4181  02CC  00F7               	movwf	??___awdiv
  4182  02CD  0877               	movf	??___awdiv,w
  4183  02CE  06F9               	xorwf	___awdiv@sign,f
  4184  02CF                     l1500:
  4185  02CF  01FA               	clrf	___awdiv@quotient
  4186  02D0  01FB               	clrf	___awdiv@quotient+1
  4187  02D1                     l1502:
  4188  02D1  0873               	movf	___awdiv@divisor,w
  4189  02D2  0474               	iorwf	___awdiv@divisor+1,w
  4190  02D3  1903               	btfsc	3,2
  4191  02D4  2AD6               	goto	u1291
  4192  02D5  2AD7               	goto	u1290
  4193  02D6                     u1291:
  4194  02D6  2B0E               	goto	l1522
  4195  02D7                     u1290:
  4196  02D7                     l1504:
  4197  02D7  01F8               	clrf	___awdiv@counter
  4198  02D8  0AF8               	incf	___awdiv@counter,f
  4199  02D9  2AE5               	goto	l1510
  4200  02DA                     l1506:
  4201  02DA  3001               	movlw	1
  4202  02DB                     u1305:
  4203  02DB  1003               	clrc
  4204  02DC  0DF3               	rlf	___awdiv@divisor,f
  4205  02DD  0DF4               	rlf	___awdiv@divisor+1,f
  4206  02DE  3EFF               	addlw	-1
  4207  02DF  1D03               	skipz
  4208  02E0  2ADB               	goto	u1305
  4209  02E1                     l1508:
  4210  02E1  3001               	movlw	1
  4211  02E2  00F7               	movwf	??___awdiv
  4212  02E3  0877               	movf	??___awdiv,w
  4213  02E4  07F8               	addwf	___awdiv@counter,f
  4214  02E5                     l1510:
  4215  02E5  1FF4               	btfss	___awdiv@divisor+1,7
  4216  02E6  2AE8               	goto	u1311
  4217  02E7  2AE9               	goto	u1310
  4218  02E8                     u1311:
  4219  02E8  2ADA               	goto	l1506
  4220  02E9                     u1310:
  4221  02E9                     l1512:
  4222  02E9  3001               	movlw	1
  4223  02EA                     u1325:
  4224  02EA  1003               	clrc
  4225  02EB  0DFA               	rlf	___awdiv@quotient,f
  4226  02EC  0DFB               	rlf	___awdiv@quotient+1,f
  4227  02ED  3EFF               	addlw	-1
  4228  02EE  1D03               	skipz
  4229  02EF  2AEA               	goto	u1325
  4230  02F0  0874               	movf	___awdiv@divisor+1,w
  4231  02F1  0276               	subwf	___awdiv@dividend+1,w
  4232  02F2  1D03               	skipz
  4233  02F3  2AF6               	goto	u1335
  4234  02F4  0873               	movf	___awdiv@divisor,w
  4235  02F5  0275               	subwf	___awdiv@dividend,w
  4236  02F6                     u1335:
  4237  02F6  1C03               	skipc
  4238  02F7  2AF9               	goto	u1331
  4239  02F8  2AFA               	goto	u1330
  4240  02F9                     u1331:
  4241  02F9  2B01               	goto	l1518
  4242  02FA                     u1330:
  4243  02FA                     l1514:
  4244  02FA  0873               	movf	___awdiv@divisor,w
  4245  02FB  02F5               	subwf	___awdiv@dividend,f
  4246  02FC  0874               	movf	___awdiv@divisor+1,w
  4247  02FD  1C03               	skipc
  4248  02FE  03F6               	decf	___awdiv@dividend+1,f
  4249  02FF  02F6               	subwf	___awdiv@dividend+1,f
  4250  0300                     l1516:
  4251  0300  147A               	bsf	___awdiv@quotient,0
  4252  0301                     l1518:
  4253  0301  3001               	movlw	1
  4254  0302                     u1345:
  4255  0302  1003               	clrc
  4256  0303  0CF4               	rrf	___awdiv@divisor+1,f
  4257  0304  0CF3               	rrf	___awdiv@divisor,f
  4258  0305  3EFF               	addlw	-1
  4259  0306  1D03               	skipz
  4260  0307  2B02               	goto	u1345
  4261  0308                     l1520:
  4262  0308  3001               	movlw	1
  4263  0309  02F8               	subwf	___awdiv@counter,f
  4264  030A  1D03               	btfss	3,2
  4265  030B  2B0D               	goto	u1351
  4266  030C  2B0E               	goto	u1350
  4267  030D                     u1351:
  4268  030D  2AE9               	goto	l1512
  4269  030E                     u1350:
  4270  030E                     l1522:
  4271  030E  0879               	movf	___awdiv@sign,w
  4272  030F  1903               	btfsc	3,2
  4273  0310  2B12               	goto	u1361
  4274  0311  2B13               	goto	u1360
  4275  0312                     u1361:
  4276  0312  2B18               	goto	l1526
  4277  0313                     u1360:
  4278  0313                     l1524:
  4279  0313  09FA               	comf	___awdiv@quotient,f
  4280  0314  09FB               	comf	___awdiv@quotient+1,f
  4281  0315  0AFA               	incf	___awdiv@quotient,f
  4282  0316  1903               	skipnz
  4283  0317  0AFB               	incf	___awdiv@quotient+1,f
  4284  0318                     l1526:
  4285  0318  087B               	movf	___awdiv@quotient+1,w
  4286  0319  00F4               	movwf	?___awdiv+1
  4287  031A  087A               	movf	___awdiv@quotient,w
  4288  031B  00F3               	movwf	?___awdiv
  4289  031C                     l477:
  4290  031C  0008               	return
  4291  031D                     __end_of___awdiv:
  4292                           
  4293                           	psect	text22
  4294  0134                     __ptext22:	
  4295 ;; *************** function _configPorts *****************
  4296 ;; Defined at:
  4297 ;;		line 50 in file "newmain.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;		None
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		None
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4311 ;;      Params:         0       0       0       0       0
  4312 ;;      Locals:         0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0
  4314 ;;      Totals:         0       0       0       0       0
  4315 ;;Total ram usage:        0 bytes
  4316 ;; Hardware stack levels used: 1
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_main
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           
  4325                           ;psect for function _configPorts
  4326  0134                     _configPorts:
  4327  0134                     l1530:	
  4328                           ;incstack = 0
  4329                           ; Regs used in _configPorts: []
  4330                           
  4331                           
  4332                           ;newmain.c: 53:     TRISDbits.TRISD0 = 0;
  4333  0134  1683               	bsf	3,5	;RP0=1, select bank1
  4334  0135  1303               	bcf	3,6	;RP1=0, select bank1
  4335  0136  1008               	bcf	8,0	;volatile
  4336                           
  4337                           ;newmain.c: 54:     TRISDbits.TRISD1 = 0;
  4338  0137  1088               	bcf	8,1	;volatile
  4339                           
  4340                           ;newmain.c: 55:     TRISDbits.TRISD2 = 0;
  4341  0138  1108               	bcf	8,2	;volatile
  4342                           
  4343                           ;newmain.c: 56:     TRISDbits.TRISD3 = 0;
  4344  0139  1188               	bcf	8,3	;volatile
  4345                           
  4346                           ;newmain.c: 57:     TRISDbits.TRISD4 = 0;
  4347  013A  1208               	bcf	8,4	;volatile
  4348                           
  4349                           ;newmain.c: 58:     TRISDbits.TRISD5 = 0;
  4350  013B  1288               	bcf	8,5	;volatile
  4351                           
  4352                           ;newmain.c: 59:     TRISDbits.TRISD6 = 0;
  4353  013C  1308               	bcf	8,6	;volatile
  4354                           
  4355                           ;newmain.c: 60:     TRISDbits.TRISD7 = 0;
  4356  013D  1388               	bcf	8,7	;volatile
  4357                           
  4358                           ;newmain.c: 62:     TRISBbits.TRISB0 = 0;
  4359  013E  1006               	bcf	6,0	;volatile
  4360                           
  4361                           ;newmain.c: 63:     TRISBbits.TRISB1 = 0;
  4362  013F  1086               	bcf	6,1	;volatile
  4363                           
  4364                           ;newmain.c: 64:     TRISBbits.TRISB2 = 0;
  4365  0140  1106               	bcf	6,2	;volatile
  4366                           
  4367                           ;newmain.c: 65:     TRISBbits.TRISB3 = 1;
  4368  0141  1586               	bsf	6,3	;volatile
  4369                           
  4370                           ;newmain.c: 66:     TRISBbits.TRISB4 = 1;
  4371  0142  1606               	bsf	6,4	;volatile
  4372                           
  4373                           ;newmain.c: 67:     TRISBbits.TRISB5 = 1;
  4374  0143  1686               	bsf	6,5	;volatile
  4375                           
  4376                           ;newmain.c: 68:     TRISBbits.TRISB6 = 0;
  4377  0144  1306               	bcf	6,6	;volatile
  4378                           
  4379                           ;newmain.c: 69:     TRISBbits.TRISB7 = 0;
  4380  0145  1386               	bcf	6,7	;volatile
  4381                           
  4382                           ;newmain.c: 71:     TRISAbits.TRISA0 = 1;
  4383  0146  1405               	bsf	5,0	;volatile
  4384                           
  4385                           ;newmain.c: 72:     TRISAbits.TRISA1 = 1;
  4386  0147  1485               	bsf	5,1	;volatile
  4387                           
  4388                           ;newmain.c: 73:     TRISAbits.TRISA2 = 1;
  4389  0148  1505               	bsf	5,2	;volatile
  4390                           
  4391                           ;newmain.c: 74:     TRISCbits.TRISC5 = 0;
  4392  0149  1287               	bcf	7,5	;volatile
  4393                           
  4394                           ;newmain.c: 75:     TRISCbits.TRISC2 = 0;
  4395  014A  1107               	bcf	7,2	;volatile
  4396                           
  4397                           ;newmain.c: 78:     PORTDbits.RD0 = 0;
  4398  014B  1283               	bcf	3,5	;RP0=0, select bank0
  4399  014C  1303               	bcf	3,6	;RP1=0, select bank0
  4400  014D  1008               	bcf	8,0	;volatile
  4401                           
  4402                           ;newmain.c: 79:     PORTDbits.RD1 = 0;
  4403  014E  1088               	bcf	8,1	;volatile
  4404                           
  4405                           ;newmain.c: 80:     PORTDbits.RD2 = 0;
  4406  014F  1108               	bcf	8,2	;volatile
  4407                           
  4408                           ;newmain.c: 81:     PORTDbits.RD3 = 0;
  4409  0150  1188               	bcf	8,3	;volatile
  4410                           
  4411                           ;newmain.c: 82:     PORTDbits.RD4 = 0;
  4412  0151  1208               	bcf	8,4	;volatile
  4413                           
  4414                           ;newmain.c: 83:     PORTDbits.RD5 = 0;
  4415  0152  1288               	bcf	8,5	;volatile
  4416                           
  4417                           ;newmain.c: 84:     PORTDbits.RD6 = 0;
  4418  0153  1308               	bcf	8,6	;volatile
  4419                           
  4420                           ;newmain.c: 85:     PORTDbits.RD7 = 0;
  4421  0154  1388               	bcf	8,7	;volatile
  4422                           
  4423                           ;newmain.c: 87:     PORTBbits.RB0 = 0;
  4424  0155  1006               	bcf	6,0	;volatile
  4425                           
  4426                           ;newmain.c: 88:     PORTBbits.RB1 = 0;
  4427  0156  1086               	bcf	6,1	;volatile
  4428                           
  4429                           ;newmain.c: 89:     PORTBbits.RB2 = 0;
  4430  0157  1106               	bcf	6,2	;volatile
  4431                           
  4432                           ;newmain.c: 90:     PORTBbits.RB3 = 1;
  4433  0158  1586               	bsf	6,3	;volatile
  4434                           
  4435                           ;newmain.c: 91:     PORTBbits.RB4 = 0;
  4436  0159  1206               	bcf	6,4	;volatile
  4437                           
  4438                           ;newmain.c: 92:     PORTBbits.RB5 = 0;
  4439  015A  1286               	bcf	6,5	;volatile
  4440                           
  4441                           ;newmain.c: 93:     PORTBbits.RB6 = 0;
  4442  015B  1306               	bcf	6,6	;volatile
  4443                           
  4444                           ;newmain.c: 94:     PORTBbits.RB7 = 0;
  4445  015C  1386               	bcf	6,7	;volatile
  4446  015D                     l63:
  4447  015D  0008               	return
  4448  015E                     __end_of_configPorts:
  4449                           
  4450                           	psect	text23
  4451  006C                     __ptext23:	
  4452 ;; *************** function _adc_init *****************
  4453 ;; Defined at:
  4454 ;;		line 144 in file "newmain.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		status,2
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4468 ;;      Params:         0       0       0       0       0
  4469 ;;      Locals:         0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0
  4471 ;;      Totals:         0       0       0       0       0
  4472 ;;Total ram usage:        0 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_main
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function _adc_init
  4483  006C                     _adc_init:
  4484  006C                     l1532:	
  4485                           ;incstack = 0
  4486                           ; Regs used in _adc_init: [status,2]
  4487                           
  4488                           
  4489                           ;newmain.c: 146:     ADCON0=0;
  4490  006C  1283               	bcf	3,5	;RP0=0, select bank0
  4491  006D  1303               	bcf	3,6	;RP1=0, select bank0
  4492  006E  019F               	clrf	31	;volatile
  4493                           
  4494                           ;newmain.c: 147:     ADCON1=0;
  4495  006F  1683               	bsf	3,5	;RP0=1, select bank1
  4496  0070  1303               	bcf	3,6	;RP1=0, select bank1
  4497  0071  019F               	clrf	31	;volatile
  4498  0072                     l1534:
  4499                           
  4500                           ;newmain.c: 148:     ADCON0bits.ADON = 1;
  4501  0072  1283               	bcf	3,5	;RP0=0, select bank0
  4502  0073  1303               	bcf	3,6	;RP1=0, select bank0
  4503  0074  141F               	bsf	31,0	;volatile
  4504  0075                     l92:
  4505  0075  0008               	return
  4506  0076                     __end_of_adc_init:
  4507  007E                     btemp	set	126	;btemp
  4508  007E                     wtemp0	set	126
  4509                           
  4510                           	psect	config
  4511                           
  4512                           ;Config register CONFIG @ 0x2007
  4513                           ;	Oscillator Selection bits
  4514                           ;	FOSC = HS, HS oscillator
  4515                           ;	Watchdog Timer Enable bit
  4516                           ;	WDTE = OFF, WDT disabled
  4517                           ;	Power-up Timer Enable bit
  4518                           ;	PWRTE = OFF, PWRT disabled
  4519                           ;	Brown-out Reset Enable bit
  4520                           ;	BOREN = OFF, BOR disabled
  4521                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4522                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4523                           ;	Data EEPROM Memory Code Protection bit
  4524                           ;	CPD = OFF, Data EEPROM code protection off
  4525                           ;	Flash Program Memory Write Enable bits
  4526                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4527                           ;	In-Circuit Debugger Mode bit
  4528                           ;	DEBUG = 0x1, unprogrammed default
  4529                           ;	Flash Program Memory Code Protection bit
  4530                           ;	CP = OFF, Code protection off
  4531  2007                     	org	8199
  4532  2007  3F3A               	dw	16186

Data Sizes:
    Strings     482
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     16      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_10(CODE[30]), STR_9(CODE[34]), STR_8(CODE[46]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> print_aqc1_status@str(BANK0[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    usart_write_string@text	PTR unsigned char  size(2) Largest target is 89
		 -> print_aqc1_status@str(BANK0[50]), STR_7(CODE[87]), STR_6(CODE[89]), STR_5(CODE[70]), 
		 -> STR_4(CODE[87]), STR_3(CODE[89]), STR_2(CODE[71]), STR_1(CODE[55]), 

    sp__usart_read_string	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _usart_write_string->_usart_write_char
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _debounce->_delay
    ___awdiv->_adc_read

Critical Paths under _main in BANK0

    _main->_solar_tracker
    _solar_tracker->_print_aqc1_status
    _print_aqc1_status->_sprintf

Critical Paths under _main in BANK1

    _main->_solar_tracker

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   16561
                                              8 BANK1      8     8      0
                            ___awdiv
                           _adc_init
                           _adc_read
                         _changeMode
                _change_cooler_state
                _change_heater_state
                        _configPorts
                           _debounce
                              _delay
                  _print_aqc1_status
                      _solar_tracker
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _solar_tracker                                       12     4      8    9226
                                             75 BANK0      4     4      0
                                              0 BANK1      8     0      8
                            ___awdiv
                           _adc_read
                         _changeMode
                _change_cooler_state
                _change_heater_state
                  _check_temperature
                           _debounce
                              _delay
                           _moveLeft
                          _moveRight
                  _print_aqc1_status
                          _stopMotor
                 _usart_write_string
 ---------------------------------------------------------------------------------
 (2) _print_aqc1_status                                   58    50      8    3443
                                             17 BANK0     58    50      8
                            _sprintf
                 _usart_write_string
 ---------------------------------------------------------------------------------
 (2) _usart_write_string                                   7     5      2     872
                                              1 COMMON     7     5      2
                   _usart_write_char
 ---------------------------------------------------------------------------------
 (3) _usart_write_char                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             25    19      6    1429
                                              0 BANK0     17    11      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _moveRight                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _moveLeft                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _debounce                                             2     0      2    1328
                                              5 COMMON     2     0      2
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     578
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _check_temperature                                    2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _change_heater_state                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _change_cooler_state                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _changeMode                                           4     2      2     295
                                              0 COMMON     4     2      2
                          _setNormal
                         _setStandby
 ---------------------------------------------------------------------------------
 (3) _setStandby                                           0     0      0       0
                          _stopMotor
 ---------------------------------------------------------------------------------
 (2) _stopMotor                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setNormal                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_read                                             3     1      2     706
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              3 COMMON     9     5      4
                           _adc_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _configPorts                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     _adc_read (ARG)
   _adc_init
   _adc_read
   _changeMode
     _setNormal
     _setStandby
       _stopMotor
   _change_cooler_state
   _change_heater_state
   _configPorts
   _debounce
     _delay
   _delay
   _print_aqc1_status
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _usart_write_string
       _usart_write_char
   _solar_tracker
     ___awdiv
     _adc_read
     _changeMode
     _change_cooler_state
     _change_heater_state
     _check_temperature
     _debounce
     _delay
     _moveLeft
     _moveRight
     _print_aqc1_status
     _stopMotor
     _usart_write_string
   _usart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     10      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 25 20:28:50 2021

                            pc 0002       __end_of_usart_write_char 0080                             l63 015D  
                           l72 0058                             l66 005D                             l75 0053  
                           l83 0133                             l92 0075                             l69 0062  
                           l78 006B                             l86 00B0                             l89 00BE  
                           l98 00D9                   ___awdiv@sign 0079                             fsr 0004  
                          l101 0091                            l201 045A                            l122 007F  
                          l202 0512                            l203 046D                            l119 0077  
                          l320 0418                            l128 01D9                            l145 0265  
                          l170 077A                            l155 0635                            l172 07B0  
                          l173 078D                            l157 066B                            l149 07F5  
                          l182 07FB                            l158 0648                            l192 0113  
                          l185 02B5                            l195 00F6                            l189 00A6  
                          l606 0197                            l477 031C                            l596 021D  
                          u900 0219                            u901 0218                            u910 0164  
                          u830 007D                            u911 0163                            u831 007C  
                          u840 01E2                            u841 01E1                            u930 0176  
                          u931 0175                            u860 01F4                            u940 0180  
                          u861 01F3                            u941 017F                            u925 0168  
                          u855 01E6                            u880 0205                            u960 0193  
                          u881 0204                            u961 0192                            u945 017C  
                          _RX9 00C6                            u970 00BE                            u971 00BD  
                          u875 01F5                            u955 0187                            u980 01A5  
                          u885 0201                            u990 01C7                            u975 00BA  
                          u895 020D                            _TX9 04C6                            fsr0 0004  
                          indf 0000                 ?_solar_tracker 00A0                           l1300 01F0  
                         l1310 0213                           l1302 01F4                           l1304 0205  
                         l1312 0219                           l1320 0167                           l1400 03B6  
                         l1306 020B                           l1330 0186                           l1322 016E  
                         l1402 03E8                           l1410 0414                           l1500 02CF  
                         l1340 0063                           l1420 005E                           l1308 020C  
                         l1332 018D                           l1324 0172                           l1316 015E  
                         l1404 03EF                           l1510 02E5                           l1502 02D1  
                         l1342 0068                           l1422 0114                           l1326 0176  
                         l1318 0164                           l1334 0193                           l1406 03F3  
                         l1350 019B                           l1520 0308                           l1512 02E9  
                         l1504 02D7                           l1432 00BF                           l1424 0128  
                         l1344 00A7                           l1328 0180                           l1360 032B  
                         l1408 03FC                           l1352 01B7                           l1600 0661  
                         l1530 0134                           l1514 02FA                           l1506 02DA  
                         l1522 030E                           l1442 00D3                           l1434 00C2  
                         l1338 0050                           l1426 012E                           l1346 00AA  
                         l1450 0226                           l1418 0059                           l1290 01DA  
                         l1370 035B                           l1362 0332                           l1354 01BD  
                         l1610 0698                           l1532 006C                           l1524 0313  
                         l1516 0300                           l1508 02E1                           l1436 00CE  
                         l1284 0054                           l1428 0133                           l1460 0247  
                         l1452 022F                           l1292 01DC                           l1380 0374  
                         l1372 0363                           l1364 0337                           l1356 0320  
                         l1348 0198                           l1620 06D7                           l1604 066B  
                         l1612 06A2                           l1540 0085                           l1534 0072  
                         l1526 0318                           l1518 0301                           l1438 00CF  
                         l1470 0092                           l1462 024E                           l1454 0236  
                         l1446 021E                           l1294 01E2                           l1390 0396  
                         l1374 0367                           l1358 0325                           l1630 0774  
                         l1622 0710                           l1614 06BF                           l1606 0688  
                         l1550 008E                           l1542 0086                           l1472 009F  
                         l1296 01E5                           l1392 03A0                           l1376 036B  
                         l1712 0350                           l1368 0338                           l1288 007D  
                         l1480 0266                           l1640 079A                           l1624 071F  
                         l1616 06C4                           l1608 0690                           l1560 0545  
                         l1552 0516                           l1544 0089                           l1536 0080  
                         l1490 02BB                           l1482 00F7                           l1466 0256  
                         l1458 023E                           l1298 01EC                           l1394 03A6  
                         l1386 0376                           l1378 036F                           l1650 07CD  
                         l1642 07A0                           l1634 077E                           l1626 0754  
                         l1618 06CD                           l1570 057A                           l1562 054A  
                         l1554 0516                           l1546 008A                           l1538 0083  
                         l1492 02C0                           l1484 00DA                           l1476 00A4  
                         l1468 025F                           l1396 03AD                           l1644 07A6  
                         l1636 0787                           l1652 07D5                           l1628 075A  
                         l1580 05DA                           l1572 057F                           l1564 0554  
                         l1556 0527                           l1548 008D                           l1494 02C2  
                         l1486 02B6                           l1398 03B1                           l1654 07DD  
                         l1638 0791                           l1590 0639                           l1582 060F  
                         l1574 0588                           l1558 0536                           l1670 0430  
                         l1662 0419                           l1496 02C6                           l1488 02B7  
                         l1648 07B0                           l1656 07E7                           l1592 0642  
                         l1584 0615                           l1576 0592                           l1568 055D  
                         l1680 0471                           l1672 0439                           l1664 0421  
                         l1498 02CB                           l1658 07EC                           l1594 064C  
                         l1586 062F                           l1578 05CB                           l1690 04F4  
                         l1682 047A                           l1674 043F                           l1666 0426  
                         l1596 0655                           l1684 0480                           l1676 045E  
                         l1668 042B                           l1598 065B                           l1686 0488  
                         l1678 0467                           l1688 04C1                           STR_1 0959  
                         STR_2 08CC                           STR_3 081C                           STR_4 0875  
                         STR_5 0913                           STR_6 081C                           STR_7 0875  
                         STR_8 0990                           STR_9 09BE                           _BRGH 04C2  
                         u1000 01D9                           _CREN 00C4                           u1001 01D8  
                         u1010 032B                           u1011 032A                           u1100 0128  
                         u1020 036B                           u1101 0127                           u1021 036A  
                         u1110 00D3                           u1030 0395                           u1111 00D2  
                         u1031 0394                           u1120 0225                           u1040 03A0  
                         u1121 0224                           u1041 039F                           u1210 0110  
                         u1130 0235                           u1050 03A6                           u1211 010C  
                         u1131 0234                           u1051 03A5                           u1035 0391  
                         u1204 0106                           u1140 023D                           u1060 03FC  
                         u1141 023C                           u1061 03FB                           u1310 02E9  
                         u1230 00E6                           u1150 024D                           u1070 0414  
                         u1311 02E8                           u1231 00E2                           u1151 024C  
                         u1071 0413                           u1080 011B                           u1224 0113  
                         u1160 0255                           u1400 057A                           u1305 02DB  
                         u1081 0119                           u1161 0254                           u1401 0579  
                         u1330 02FA                           u1090 011C                           u1250 00F3  
                         u1170 0265                           u1410 0615                           u1331 02F9  
                         u1251 00EF                           u1171 0264                           u1411 0614  
                         u1244 00E9                           u1180 009F                           u1500 077E  
                         u1420 0639                           u1325 02EA                           u1181 009E  
                         u1501 077D                           u1421 0638                           u1405 0576  
                         u1350 030E                           u1270 02BB                           u1190 0103  
                         u1510 0791                           u1430 064C                           u1351 030D  
                         u1335 02F6                           u1271 02BA                           u1191 00FF  
                         u1511 0790                           u1431 064B                           u1360 0313  
                         u1280 02C6                           u1264 00F6                           u1520 07A6  
                         u1440 0661                           u1361 0312                           u1345 0302  
                         u1281 02C5                           u1185 009B                           u1521 07A5  
                         u1441 0660                           u1290 02D7                           u1530 07CD  
                         u1450 0688                           u1370 0536                           u1291 02D6  
                         u1531 07CC                           u1451 0687                           u1371 0535  
                         u1540 07D5                           u1460 0690                           u1380 0545  
                         u1541 07D4                           u1461 068F                           u1381 0544  
                         u1550 07DD                           u1470 0698                           u1390 055C  
                         u1551 07DC                           u1535 07C9                           u1471 0697  
                         u1455 0684                           u1391 055B                           u1375 0532  
                         u1480 06BF                           u1560 043F                           u1481 06BE  
                         u1385 0541                           u1561 043E                           u1490 075A  
                         u1570 045E                           u1491 0759                           u1571 045D  
                         u1580 0471                           u1485 06BB                           u1581 0470  
                         u1590 0488                           u1591 0487                           _RCIF 0065  
                         _SPEN 00C7                           _TXEN 04C5                           _TXIF 0064  
                         _SYNC 04C4                           _main 0419                           btemp 007E  
                         start 0000                          ?_main 0070                __end_of___awdiv 031D  
                        STR_10 09E0                ___awdiv@divisor 0073                __end_of___lwdiv 021E  
              __end_of___lwmod 0198                ___awdiv@counter 0078                          _RCREG 001A  
                        _SPBRG 0099                          _TXREG 0019                          _delay 00A7  
              __end_of_dpowers 081C             _usart_write_string 0198                changeMode@state 0070  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __end_of_sprintf 0419            ?_usart_write_string 0071                __initialization 07FC  
                 __end_of_main 0516   __size_of_change_heater_state 001D                         ??_main 007E  
         ??_usart_write_string 0073                ??_solar_tracker 006B                         ?_delay 0070  
                       _ADCON0 001F                         _ADCON1 009F                         _ADRESH 001E  
                       _ADRESL 009E               ___awdiv@dividend 0075               __end_of_adc_init 0076  
             __end_of_adc_read 00DA               __end_of_debounce 0266           __size_of_configPorts 002A  
                    ??___awdiv 0077                      ??___lwdiv 0074                      ??___lwmod 007C  
           solar_tracker@ldr_1 00A0             solar_tracker@ldr_2 00A2                         delay@i 0073  
                       delay@t 0070               ___awdiv@quotient 007A             solar_tracker@state 00A6  
             __end_of_moveLeft 005E   __size_of_change_cooler_state 001D                      ??_sprintf 0026  
      __end_of__initialization 07FC                 __pcstackCOMMON 0070                  __end_of_delay 00BF  
            ?_usart_write_char 0070             ??_usart_write_char 0070                        ??_delay 0072  
                   _changeMode 0114  solar_tracker@max_temp_reached 006D                     adc_read@ch 0070  
                   __pmaintext 0419             __size_of_setNormal 0004             __size_of_moveRight 0005  
                    ?_adc_init 0070                      ?_adc_read 0070           print_aqc1_status@str 0039  
                    ?_debounce 0075            _change_heater_state 00F7                     __stringtab 0800  
           __size_of_stopMotor 0005              _check_temperature 0092                      ?_moveLeft 0070  
           ?_check_temperature 0070           ?_change_heater_state 0070                        ___awdiv 02B6  
                      ___lwdiv 01DA                        ___lwmod 015E              usart_write_char@c 0070  
          ??_check_temperature 0072         print_aqc1_status@ldr_1 0031         print_aqc1_status@ldr_2 0033  
                   ??_adc_init 0070                     ??_adc_read 0072                        __ptext1 0080  
                      __ptext2 0516                        __ptext3 0266                        __ptext4 0198  
                      __ptext5 0076                        __ptext6 031D                        __ptext7 015E  
                      __ptext8 01DA                        __ptext9 005E         print_aqc1_status@state 0037  
                      _dpowers 0812                     ??_debounce 0077                        _sprintf 031D  
         end_of_initialization 07FC                    ?_changeMode 0070              __end_of_setNormal 0054  
            __end_of_moveRight 0063      __end_of_check_temperature 00A7                     _setStandby 0063  
          _change_cooler_state 00DA                     ??_moveLeft 0070          ??_change_heater_state 0070  
                 __pstringtext 0800              __end_of_stopMotor 0059                      _PORTBbits 0006  
                    _PORTCbits 0007                      _PORTDbits 0008    __size_of_usart_write_string 0042  
         ?_change_cooler_state 0070                      _TRISAbits 0085                      _TRISBbits 0086  
                    _TRISCbits 0087                      _TRISDbits 0088          __end_of_solar_tracker 07FC  
 print_aqc1_status@temperature 0035                     _usart_init 0080                  ??_configPorts 0070  
          __size_of_changeMode 0020          ??_change_cooler_state 0070            start_initialization 07FC  
    __size_of_usart_write_char 000A     __size_of_check_temperature 0015                    ?_setStandby 0070  
          __end_of_configPorts 015E              __size_of_adc_init 000A              __size_of_adc_read 001B  
                    ___latbits 0002                  __pcstackBANK0 0020                  __pcstackBANK1 00A0  
            __size_of_debounce 0048                    sprintf@flag 002B                    sprintf@prec 002C  
                  ?_usart_init 0070               ___lwdiv@dividend 0072              __size_of_moveLeft 0005  
                     ?___awdiv 0073              _print_aqc1_status 0266                       ?___lwdiv 0070  
                     ?___lwmod 0078         usart_write_string@text 0071             ?_print_aqc1_status 0031  
          __size_of_setStandby 0009            ??_print_aqc1_status 007E               ___lwdiv@quotient 0075  
               __size_of_delay 0018                       ?_sprintf 0020            usart_write_string@i 0076  
                 ??_changeMode 0072   check_temperature@temperature 0070                   debounce@port 0075  
                    _setNormal 0050                      _moveRight 005E                    _configPorts 0134  
    __end_of_print_aqc1_status 02B6                     _ADCON0bits 001F                    __stringbase 0812  
                   _ADCON1bits 009F             __end_of_changeMode 0134                      main@ldr_1 00A8  
                    main@ldr_2 00AA                      _stopMotor 0054            __size_of_usart_init 0012  
                    main@state 00AE               _usart_write_char 0076    __end_of_change_heater_state 0114  
                   ?_setNormal 0070                     ?_moveRight 0070       solar_tracker@temperature 00A4  
             __size_of___awdiv 0067     __end_of_usart_write_string 01DA               __size_of___lwdiv 0044  
             __size_of___lwmod 003A             __end_of__stringtab 0812                       _adc_init 006C  
                     _adc_read 00BF                     sprintf@val 002D                     ?_stopMotor 0070  
                     _debounce 021E                ___lwdiv@divisor 0070                ___lwdiv@counter 0077  
                     __ptext10 0059                       __ptext11 021E                       __ptext20 00BF  
                     __ptext12 00A7                       __ptext21 02B6                       __ptext13 0092  
                     __ptext22 0134                       __ptext14 00F7                       __ptext23 006C  
                     __ptext15 00DA                       __ptext16 0114                       __ptext17 0063  
                     __ptext18 0054                       __ptext19 0050               __size_of_sprintf 00FC  
                __size_of_main 00FD                   ??_setStandby 0070                       _moveLeft 0059  
   __size_of_print_aqc1_status 0050    __end_of_change_cooler_state 00F7         __size_of_solar_tracker 02E6  
              main@temperature 00AC             __end_of_setStandby 006C                      sprintf@ap 002A  
                    sprintf@sp 002F               ___lwmod@dividend 007A                   ??_usart_init 0070  
                  ??_setNormal 0070                    ??_moveRight 0070                      stringcode 080A  
                     sprintf@c 0030                       sprintf@f 0020                ___lwmod@divisor 0078  
                  ??_stopMotor 0070                ___lwmod@counter 007D                       stringtab 0800  
           __end_of_usart_init 0092                  _solar_tracker 0516                   ?_configPorts 0070  
